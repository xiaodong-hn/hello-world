<!doctype html>
<html lang="zh"><head><meta charset="utf-8"/><title data-react-helmet="true">AVL树，红黑树，B树，B+树，Trie树都分别应用在哪些现实场景中？ - 知乎</title><meta name="viewport" content="width=device-width,initial-scale=1,maximum-scale=1"/><meta name="renderer" content="webkit"/><meta name="force-rendering" content="webkit"/><meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1"/><meta name="google-site-verification" content="FTeR0c8arOPKh8c5DYh_9uu98_zJbaWw53J-Sch9MTg"/><meta data-react-helmet="true" name="apple-itunes-app" content="app-id=432274380, app-argument=zhihu://questions/30527705"/><link rel="shortcut icon" type="image/x-icon" href="https://static.zhihu.com/static/favicon.ico"/><link rel="dns-prefetch" href="//static.zhimg.com"/><link rel="dns-prefetch" href="//pic1.zhimg.com"/><link rel="dns-prefetch" href="//pic2.zhimg.com"/><link rel="dns-prefetch" href="//pic3.zhimg.com"/><link rel="dns-prefetch" href="//pic4.zhimg.com"/><link href="https://static.zhihu.com/heifetz/main.app.7695989f2f4536a4f654.css" rel="stylesheet"/></head><body class="Entry-body"><div id="root"><div data-zop-userToken="{}" data-reactroot="" data-reactid="1" data-react-checksum="1716422857"><!-- react-empty: 2 --><div class="LoadingBar" data-reactid="3"></div><!-- react-empty: 4 --><div data-reactid="5"><header role="banner" class="Sticky AppHeader" data-za-module="TopNavBar" data-reactid="6"><!-- react-empty: 7 --><div class="AppHeader-inner" data-reactid="8"><a href="/" aria-label="知乎" data-reactid="9"><svg viewBox="0 0 200 91" class="Icon Icon--logo" style="fill:#0f88eb;height:30px;width:64px;" width="64" height="30" aria-hidden="true" data-reactid="10"><title data-reactid="11"></title><g data-reactid="12"><path d="M53.29 80.035l7.32.002 2.41 8.24 13.128-8.24h15.477v-67.98H53.29v67.978zm7.79-60.598h22.756v53.22h-8.73l-8.718 5.473-1.587-5.46-3.72-.012v-53.22zM46.818 43.162h-16.35c.545-8.467.687-16.12.687-22.955h15.987s.615-7.05-2.68-6.97H16.807c1.09-4.1 2.46-8.332 4.1-12.708 0 0-7.523 0-10.085 6.74-1.06 2.78-4.128 13.48-9.592 24.41 1.84-.2 7.927-.37 11.512-6.94.66-1.84.785-2.08 1.605-4.54h9.02c0 3.28-.374 20.9-.526 22.95H6.51c-3.67 0-4.863 7.38-4.863 7.38H22.14C20.765 66.11 13.385 79.24 0 89.62c6.403 1.828 12.784-.29 15.937-3.094 0 0 7.182-6.53 11.12-21.64L43.92 85.18s2.473-8.402-.388-12.496c-2.37-2.788-8.768-10.33-11.496-13.064l-4.57 3.627c1.363-4.368 2.183-8.61 2.46-12.71H49.19s-.027-7.38-2.372-7.38zm128.752-.502c6.51-8.013 14.054-18.302 14.054-18.302s-5.827-4.625-8.556-1.27c-1.874 2.548-11.51 15.063-11.51 15.063l6.012 4.51zm-46.903-18.462c-2.814-2.577-8.096.667-8.096.667s12.35 17.2 12.85 17.953l6.08-4.29s-8.02-11.752-10.83-14.33zM199.99 46.5c-6.18 0-40.908.292-40.953.292v-31.56c1.503 0 3.882-.124 7.14-.376 12.773-.753 21.914-1.25 27.427-1.504 0 0 3.817-8.496-.185-10.45-.96-.37-7.24 1.43-7.24 1.43s-51.63 5.153-72.61 5.64c.5 2.756 2.38 5.336 4.93 6.11 4.16 1.087 7.09.53 15.36.277 7.76-.5 13.65-.76 17.66-.76v31.19h-41.71s.88 6.97 7.97 7.14h33.73v22.16c0 4.364-3.498 6.87-7.65 6.6-4.4.034-8.15-.36-13.027-.566.623 1.24 1.977 4.496 6.035 6.824 3.087 1.502 5.054 2.053 8.13 2.053 9.237 0 14.27-5.4 14.027-14.16V53.93h38.235c3.026 0 2.72-7.432 2.72-7.432z" fill-rule="evenodd"/></g></svg></a><nav role="navigation" class="AppHeader-nav" data-reactid="13"><a class="AppHeader-navItem" href="/" data-reactid="14">首页</a><a class="AppHeader-navItem" href="/explore" data-reactid="15">发现</a><a class="AppHeader-navItem" href="/topic" data-reactid="16">话题</a></nav><div class="SearchBar" role="search" data-reactid="17"><div class="SearchBar-toolWrapper" data-reactid="18"><form class="SearchBar-tool" data-reactid="19"><div data-reactid="20"><div class="Popover" data-reactid="21"><div class="SearchBar-input Input-wrapper Input-wrapper--grey" data-reactid="22"><input type="text" maxlength="100" value="" autocomplete="off" role="combobox" aria-expanded="false" aria-autocomplete="list" aria-activedescendant="null--1" id="null-toggle" aria-haspopup="true" aria-owns="null-content" class="Input" placeholder="搜索你感兴趣的内容…" data-reactid="23"/><div class="Input-after" data-reactid="24"><button class="Button SearchBar-searchIcon Button--primary" aria-label="搜索" type="button" data-reactid="25"><svg viewBox="0 0 16 16" class="Icon Icon--search" style="height:16px;width:16px;" width="16" height="16" aria-hidden="true" data-reactid="26"><title data-reactid="27"></title><g data-reactid="28"><path d="M12.054 10.864c.887-1.14 1.42-2.57 1.42-4.127C13.474 3.017 10.457 0 6.737 0S0 3.016 0 6.737c0 3.72 3.016 6.737 6.737 6.737 1.556 0 2.985-.533 4.127-1.42l3.103 3.104c.765.46 1.705-.37 1.19-1.19l-3.103-3.104zm-5.317.925c-2.786 0-5.053-2.267-5.053-5.053S3.95 1.684 6.737 1.684 11.79 3.95 11.79 6.737 9.522 11.79 6.736 11.79z"/></g></svg></button></div></div><!-- react-empty: 29 --></div></div></form></div></div><div class="AppHeader-userInfo" data-reactid="30"><!-- react-empty: 31 --><div class="AppHeader-profile" data-reactid="32"><div data-reactid="33"><button class="Button AppHeader-login Button--blue" type="button" data-reactid="34"><!-- react-text: 35 -->登录<!-- /react-text --></button><button class="Button Button--primary Button--blue" type="button" data-reactid="36"><!-- react-text: 37 -->加入知乎<!-- /react-text --></button></div></div></div></div></header></div><!-- react-empty: 38 --><main role="main" class="App-main" data-reactid="39"><div class="QuestionPage" itemscope="" itemtype="http://schema.org/Question" data-reactid="40"><!-- react-empty: 41 --><meta itemprop="name" content="AVL树，红黑树，B树，B+树，Trie树都分别应用在哪些现实场景中？" data-reactid="42"/><meta itemprop="url" content="https://www.zhihu.com/question/30527705" data-reactid="43"/><meta itemprop="keywords" content="算法,算法与数据结构,红黑树,树（数据结构）,B/B+树" data-reactid="44"/><meta itemprop="answerCount" content="25" data-reactid="45"/><meta itemprop="commentCount" content="0" data-reactid="46"/><meta itemprop="dateCreated" content="2015-05-20T07:35:59.000Z" data-reactid="47"/><meta itemprop="dateModified" content="2017-11-21T08:11:23.000Z" data-reactid="48"/><meta itemprop="zhihu:visitsCount" data-reactid="49"/><meta itemprop="zhihu:followerCount" content="5889" data-reactid="50"/><div data-zop-question="{&quot;title&quot;:&quot;AVL树，红黑树，B树，B+树，Trie树都分别应用在哪些现实场景中？&quot;,&quot;topics&quot;:[{&quot;name&quot;:&quot;算法&quot;,&quot;id&quot;:&quot;19553510&quot;},{&quot;name&quot;:&quot;算法与数据结构&quot;,&quot;id&quot;:&quot;19625716&quot;},{&quot;name&quot;:&quot;红黑树&quot;,&quot;id&quot;:&quot;19648609&quot;},{&quot;name&quot;:&quot;树（数据结构）&quot;,&quot;id&quot;:&quot;19680489&quot;},{&quot;name&quot;:&quot;B/B+树&quot;,&quot;id&quot;:&quot;20091609&quot;}],&quot;id&quot;:30527705,&quot;isEditable&quot;:false}" data-reactid="51"><!-- react-empty: 52 --><div class="QuestionHeader" data-reactid="53"><div class="QuestionHeader-content" data-reactid="54"><div class="QuestionHeader-main" data-reactid="55"><div class="QuestionHeader-tags" data-reactid="56"><div class="QuestionHeader-topics" data-reactid="57"><div class="Tag QuestionTopic" data-reactid="58"><span class="Tag-content" data-reactid="59"><a class="TopicLink" href="/topic/19553510" data-reactid="60"><div class="Popover" data-reactid="61"><div id="null-toggle" aria-haspopup="true" aria-expanded="false" aria-owns="null-content" data-reactid="62">算法</div><!-- react-empty: 63 --></div></a></span></div><div class="Tag QuestionTopic" data-reactid="64"><span class="Tag-content" data-reactid="65"><a class="TopicLink" href="/topic/19625716" data-reactid="66"><div class="Popover" data-reactid="67"><div id="null-toggle" aria-haspopup="true" aria-expanded="false" aria-owns="null-content" data-reactid="68">算法与数据结构</div><!-- react-empty: 69 --></div></a></span></div><div class="Tag QuestionTopic" data-reactid="70"><span class="Tag-content" data-reactid="71"><a class="TopicLink" href="/topic/19648609" data-reactid="72"><div class="Popover" data-reactid="73"><div id="null-toggle" aria-haspopup="true" aria-expanded="false" aria-owns="null-content" data-reactid="74">红黑树</div><!-- react-empty: 75 --></div></a></span></div><div class="Tag QuestionTopic" data-reactid="76"><span class="Tag-content" data-reactid="77"><a class="TopicLink" href="/topic/19680489" data-reactid="78"><div class="Popover" data-reactid="79"><div id="null-toggle" aria-haspopup="true" aria-expanded="false" aria-owns="null-content" data-reactid="80">树（数据结构）</div><!-- react-empty: 81 --></div></a></span></div><div class="Tag QuestionTopic" data-reactid="82"><span class="Tag-content" data-reactid="83"><a class="TopicLink" href="/topic/20091609" data-reactid="84"><div class="Popover" data-reactid="85"><div id="null-toggle" aria-haspopup="true" aria-expanded="false" aria-owns="null-content" data-reactid="86">B/B+树</div><!-- react-empty: 87 --></div></a></span></div></div></div><h1 class="QuestionHeader-title" data-reactid="88"><!-- react-text: 89 -->AVL树，红黑树，B树，B+树，Trie树都分别应用在哪些现实场景中？<!-- /react-text --></h1><div data-reactid="90"><!-- react-text: 91 --><!-- /react-text --><div class="QuestionHeader-detail" data-reactid="92"><div class="QuestionRichText QuestionRichText--expandable QuestionRichText--collapsed" data-reactid="93"><div data-reactid="94"><span data-reactid="95"></span><button class="Button QuestionRichText-more Button--plain" type="button" data-reactid="96"><!-- react-text: 97 -->显示全部<!-- /react-text --><svg viewBox="0 0 10 6" class="Icon QuestionRichText-more-icon Icon--arrow" style="height:16px;width:10px;" width="10" height="16" aria-hidden="true" data-reactid="98"><title data-reactid="99"></title><g data-reactid="100"><path d="M8.716.217L5.002 4 1.285.218C.99-.072.514-.072.22.218c-.294.29-.294.76 0 1.052l4.25 4.512c.292.29.77.29 1.063 0L9.78 1.27c.293-.29.293-.76 0-1.052-.295-.29-.77-.29-1.063 0z"/></g></svg></button></div></div></div></div></div><div class="QuestionHeader-side" data-reactid="101"><div class="QuestionHeader-follow-status" data-reactid="102"><div class="QuestionFollowStatus" data-reactid="103"><div class="NumberBoard QuestionFollowStatus-counts" data-reactid="104"><div class="NumberBoard-item" data-reactid="105"><div class="NumberBoard-name" data-reactid="106">关注者</div><div class="NumberBoard-value" data-reactid="107">5889</div></div><div class="NumberBoard-divider" data-reactid="108"></div><div class="NumberBoard-item" data-reactid="109"><div class="NumberBoard-name" data-reactid="110">被浏览</div><div class="NumberBoard-value" data-reactid="111">167971</div></div></div><!-- react-empty: 112 --></div></div></div></div><div class="QuestionHeader-footer" data-reactid="113"><div class="QuestionHeader-footer-inner" data-reactid="114"><div class="QuestionHeader-main QuestionHeader-footer-main" data-reactid="115"><div class="QuestionButtonGroup" data-reactid="116"><button class="Button FollowButton Button--primary Button--blue" type="button" data-reactid="117"><!-- react-text: 118 -->关注问题<!-- /react-text --></button><button class="Button Button--blue" type="button" data-reactid="119"><svg viewBox="0 0 12 12" class="Icon Button-icon Icon--modify" style="height:16px;width:14px;" width="14" height="16" aria-hidden="true" data-reactid="120"><title data-reactid="121"></title><g data-reactid="122"><path d="M.423 10.32L0 12l1.667-.474 1.55-.44-2.4-2.33-.394 1.564zM10.153.233c-.327-.318-.85-.31-1.17.018l-.793.817 2.49 2.414.792-.814c.318-.328.312-.852-.017-1.17l-1.3-1.263zM3.84 10.536L1.35 8.122l6.265-6.46 2.49 2.414-6.265 6.46z" fill-rule="evenodd"/></g></svg><!-- react-text: 123 -->写回答<!-- /react-text --></button></div><div class="QuestionHeaderActions" data-reactid="124"><div class="QuestionHeader-Comment" data-reactid="125"><button class="Button Button--plain Button--withIcon Button--withLabel" type="button" data-reactid="126"><span style="display:inline-flex;align-items:center;" data-reactid="127"><!-- react-text: 128 -->​<!-- /react-text --><svg class="Zi Zi--Comment Button-zi" fill="currentColor" viewBox="0 0 24 24" width="1.2em" height="1.2em" data-reactid="129"><path d="M10.241 19.313a.97.97 0 0 0-.77.2 7.908 7.908 0 0 1-3.772 1.482.409.409 0 0 1-.38-.637 5.825 5.825 0 0 0 1.11-2.237.605.605 0 0 0-.227-.59A7.935 7.935 0 0 1 3 11.25C3 6.7 7.03 3 12 3s9 3.7 9 8.25-4.373 9.108-10.759 8.063z" fill-rule="evenodd" data-reactid="130"></path></svg></span><!-- react-text: 131 -->添加评论<!-- /react-text --><!-- react-empty: 132 --></button></div><div class="Popover ShareMenu" data-reactid="133"><div class="" id="null-toggle" aria-haspopup="true" aria-expanded="false" aria-owns="null-content" data-reactid="134"><button class="Button Button--plain Button--withIcon Button--withLabel" type="button" data-reactid="135"><span style="display:inline-flex;align-items:center;" data-reactid="136"><!-- react-text: 137 -->​<!-- /react-text --><svg class="Zi Zi--Share Button-zi" fill="currentColor" viewBox="0 0 24 24" width="1.2em" height="1.2em" data-reactid="138"><path d="M2.931 7.89c-1.067.24-1.275 1.669-.318 2.207l5.277 2.908 8.168-4.776c.25-.127.477.198.273.39L9.05 14.66l.927 5.953c.18 1.084 1.593 1.376 2.182.456l9.644-15.242c.584-.892-.212-2.029-1.234-1.796L2.93 7.89z" fill-rule="evenodd" data-reactid="139"></path></svg></span><!-- react-text: 140 -->分享<!-- /react-text --></button></div><!-- react-empty: 141 --></div><button class="Button Button--plain Button--withIcon Button--withLabel" type="button" data-reactid="142"><span style="display:inline-flex;align-items:center;" data-reactid="143"><!-- react-text: 144 -->​<!-- /react-text --><svg class="Zi Zi--Star Button-zi" fill="currentColor" viewBox="0 0 24 24" width="1.2em" height="1.2em" data-reactid="145"><path d="M5.515 19.64l.918-5.355-3.89-3.792c-.926-.902-.639-1.784.64-1.97L8.56 7.74l2.404-4.871c.572-1.16 1.5-1.16 2.072 0L15.44 7.74l5.377.782c1.28.186 1.566 1.068.64 1.97l-3.89 3.793.918 5.354c.219 1.274-.532 1.82-1.676 1.218L12 18.33l-4.808 2.528c-1.145.602-1.896.056-1.677-1.218z" fill-rule="evenodd" data-reactid="146"></path></svg></span><!-- react-text: 147 -->邀请回答<!-- /react-text --></button><div class="Popover" data-reactid="148"><button class="Button Button--plain Button--withIcon Button--iconOnly" aria-label="更多" type="button" id="null-toggle" aria-haspopup="true" aria-expanded="false" aria-owns="null-content" data-reactid="149"><span style="display:inline-flex;align-items:center;" data-reactid="150"><!-- react-text: 151 -->​<!-- /react-text --><svg class="Zi Zi--Dots Button-zi" fill="currentColor" viewBox="0 0 24 24" width="1.2em" height="1.2em" data-reactid="152"><path d="M5 14a2 2 0 1 1 0-4 2 2 0 0 1 0 4zm7 0a2 2 0 1 1 0-4 2 2 0 0 1 0 4zm7 0a2 2 0 1 1 0-4 2 2 0 0 1 0 4z" fill-rule="evenodd" data-reactid="153"></path></svg></span></button><!-- react-empty: 154 --></div><!-- react-empty: 155 --><!-- react-empty: 156 --><!-- react-empty: 157 --><!-- react-empty: 158 --><!-- react-empty: 159 --></div><div class="QuestionHeader-actions" data-reactid="160"></div></div></div></div></div><div data-reactid="161"><div data-reactid="162"><div class="Sticky" data-reactid="163"></div></div></div></div><div class="Question-main" data-reactid="164"><div class="Question-mainColumn" data-reactid="165"><div data-reactid="166"><!-- react-empty: 167 --><div id="QuestionAnswers-answers" class="QuestionAnswers-answers" data-zop-feedlistmap="0,0,1,0" data-reactid="168"><div class="Card" data-reactid="169"><div class="List" data-reactid="170"><div class="List-header" data-reactid="171"><h4 class="List-headerText" data-reactid="172"><span data-reactid="173"><!-- react-text: 174 -->25<!-- /react-text --><!-- react-text: 175 --> 个回答<!-- /react-text --></span></h4><div class="List-headerOptions" data-reactid="176"><div class="Popover" data-reactid="177"><button class="Button Select-button Select-plainButton Button--plain" role="combobox" aria-expanded="false" type="button" id="null-toggle" aria-haspopup="true" aria-owns="null-content" data-reactid="178"><!-- react-text: 179 -->默认排序<!-- /react-text --><span style="display:inline-flex;align-items:center;" data-reactid="180"><!-- react-text: 181 -->​<!-- /react-text --><svg class="Zi Zi--Select Select-arrow" fill="#9fadc7" viewBox="0 0 24 24" width="24" height="24" data-reactid="182"><path d="M12 16.183l2.716-2.966a.757.757 0 0 1 1.064.001.738.738 0 0 1 0 1.052l-3.247 3.512a.758.758 0 0 1-1.064 0L8.22 14.27a.738.738 0 0 1 0-1.052.758.758 0 0 1 1.063 0L12 16.183zm0-9.365L9.284 9.782a.758.758 0 0 1-1.064 0 .738.738 0 0 1 0-1.052l3.248-3.512a.758.758 0 0 1 1.065 0L15.78 8.73a.738.738 0 0 1 0 1.052.757.757 0 0 1-1.063.001L12 6.818z" fill-rule="evenodd" data-reactid="183"></path></svg></span></button><!-- react-empty: 184 --></div></div></div><div data-reactid="185"><div class="" data-reactid="186"><div class="List-item" data-reactid="187"><div class="ContentItem AnswerItem" data-za-index="0" data-zop="{&quot;authorName&quot;:&quot;Bill Utada&quot;,&quot;itemId&quot;:52527887,&quot;title&quot;:&quot;AVL树，红黑树，B树，B+树，Trie树都分别应用在哪些现实场景中？&quot;,&quot;type&quot;:&quot;answer&quot;}" name="52527887" itemprop="acceptedAnswer" itemtype="http://schema.org/Answer" itemscope="" data-reactid="188"><div class="ContentItem-meta" data-reactid="189"><div class="AnswerItem-meta AnswerItem-meta--related" data-reactid="190"><div class="AuthorInfo" itemprop="author" itemscope="" itemtype="http://schema.org/Person" data-reactid="191"><meta itemprop="name" content="Bill Utada" data-reactid="192"/><meta itemprop="image" content="https://pic3.zhimg.com/50/v2-7083e6c4453962882220e9ec82c09dbe_hd.jpg" data-reactid="193"/><meta itemprop="url" content="https://www.zhihu.com/people/bill-utada" data-reactid="194"/><meta itemprop="zhihu:followerCount" content="184" data-reactid="195"/><span class="UserLink AuthorInfo-avatarWrapper" data-reactid="196"><div class="Popover" data-reactid="197"><div id="null-toggle" aria-haspopup="true" aria-expanded="false" aria-owns="null-content" data-reactid="198"><a class="UserLink-link" data-za-detail-view-element_name="User" href="/people/bill-utada" data-reactid="199"><img class="Avatar AuthorInfo-avatar" width="38" height="38" src="https://pic3.zhimg.com/50/v2-7083e6c4453962882220e9ec82c09dbe_xs.jpg" srcset="https://pic3.zhimg.com/50/v2-7083e6c4453962882220e9ec82c09dbe_l.jpg 2x" alt="Bill Utada" data-reactid="200"/></a></div><!-- react-empty: 201 --></div></span><div class="AuthorInfo-content" data-reactid="202"><div class="AuthorInfo-head" data-reactid="203"><span class="UserLink AuthorInfo-name" data-reactid="204"><div class="Popover" data-reactid="205"><div id="null-toggle" aria-haspopup="true" aria-expanded="false" aria-owns="null-content" data-reactid="206"><a class="UserLink-link" data-za-detail-view-element_name="User" href="/people/bill-utada" data-reactid="207">Bill Utada</a></div><!-- react-empty: 208 --></div></span></div><div class="AuthorInfo-detail" data-reactid="209"><div class="AuthorInfo-badge" data-reactid="210"><div class="RichText AuthorInfo-badgeText" data-reactid="211">听点音乐，写点游戏。</div></div></div></div></div><div class="AnswerItem-extraInfo" data-reactid="212"><span class="Voters" data-reactid="213"><button class="Button Button--plain" type="button" data-reactid="214"><!-- react-text: 215 -->457 人赞同了该回答<!-- /react-text --></button><!-- react-empty: 216 --></span></div></div></div><meta itemprop="image" content="" data-reactid="217"/><meta itemprop="upvoteCount" content="457" data-reactid="218"/><meta itemprop="url" content="https://www.zhihu.com/question/30527705/answer/52527887" data-reactid="219"/><meta itemprop="dateCreated" content="2015-06-24T07:28:26.000Z" data-reactid="220"/><meta itemprop="dateModified" content="2017-09-06T08:04:39.000Z" data-reactid="221"/><meta itemprop="commentCount" content="12" data-reactid="222"/><div class="RichContent RichContent--unescapable" data-reactid="223"><div class="RichContent-inner" data-reactid="224"><span class="RichText CopyrightRichText-richText" itemprop="text" data-reactid="225"><p><b>AVL树</b>:  最早的平衡二叉树之一。应用相对其他数据结构比较少。windows对进程地址空间的管理用到了AVL树。</p><p><b>红黑树</b>: 平衡二叉树，广泛用在C++的STL中。如map和set都是用红黑树实现的。</p><p><b>B/B+树: </b>用在磁盘文件组织 数据索引和数据库索引。</p><p><b>Trie树(字典树): </b>用在统计和排序大量字符串，如自动机。</p></span><!-- react-empty: 226 --></div><div data-reactid="227"><div class="ContentItem-time" data-reactid="228"><a target="_blank" href="/question/30527705/answer/52527887" data-reactid="229"><span data-tooltip="发布于 2015-06-24" data-reactid="230"><!-- react-text: 231 -->编辑于 <!-- /react-text --><!-- react-text: 232 -->2017-09-06<!-- /react-text --></span></a></div></div><div class="ContentItem-actions RichContent-actions" data-reactid="233"><span data-reactid="234"><button class="Button VoteButton VoteButton--up" aria-label="赞同" type="button" data-reactid="235"><svg viewBox="0 0 20 18" class="Icon VoteButton-upIcon Icon--triangle" style="height:16px;width:9px;" width="9" height="16" aria-hidden="true" data-reactid="236"><title data-reactid="237"></title><g data-reactid="238"><path d="M0 15.243c0-.326.088-.533.236-.896l7.98-13.204C8.57.57 9.086 0 10 0s1.43.57 1.784 1.143l7.98 13.204c.15.363.236.57.236.896 0 1.386-.875 1.9-1.955 1.9H1.955c-1.08 0-1.955-.517-1.955-1.9z"/></g></svg><!-- react-text: 239 -->457<!-- /react-text --></button><button class="Button VoteButton VoteButton--down" aria-label="反对" type="button" data-reactid="240"><svg viewBox="0 0 20 18" class="Icon VoteButton-downIcon Icon--triangle" style="height:16px;width:9px;" width="9" height="16" aria-hidden="true" data-reactid="241"><title data-reactid="242"></title><g data-reactid="243"><path d="M0 15.243c0-.326.088-.533.236-.896l7.98-13.204C8.57.57 9.086 0 10 0s1.43.57 1.784 1.143l7.98 13.204c.15.363.236.57.236.896 0 1.386-.875 1.9-1.955 1.9H1.955c-1.08 0-1.955-.517-1.955-1.9z"/></g></svg></button></span><button class="Button ContentItem-action Button--plain Button--withIcon Button--withLabel" type="button" data-reactid="244"><span style="display:inline-flex;align-items:center;" data-reactid="245"><!-- react-text: 246 -->​<!-- /react-text --><svg class="Zi Zi--Comment Button-zi" fill="currentColor" viewBox="0 0 24 24" width="1.2em" height="1.2em" data-reactid="247"><path d="M10.241 19.313a.97.97 0 0 0-.77.2 7.908 7.908 0 0 1-3.772 1.482.409.409 0 0 1-.38-.637 5.825 5.825 0 0 0 1.11-2.237.605.605 0 0 0-.227-.59A7.935 7.935 0 0 1 3 11.25C3 6.7 7.03 3 12 3s9 3.7 9 8.25-4.373 9.108-10.759 8.063z" fill-rule="evenodd" data-reactid="248"></path></svg></span><!-- react-text: 249 -->12 条评论<!-- /react-text --></button><div class="Popover ShareMenu ContentItem-action" data-reactid="250"><div class="" id="null-toggle" aria-haspopup="true" aria-expanded="false" aria-owns="null-content" data-reactid="251"><button class="Button Button--plain Button--withIcon Button--withLabel" type="button" data-reactid="252"><span style="display:inline-flex;align-items:center;" data-reactid="253"><!-- react-text: 254 -->​<!-- /react-text --><svg class="Zi Zi--Share Button-zi" fill="currentColor" viewBox="0 0 24 24" width="1.2em" height="1.2em" data-reactid="255"><path d="M2.931 7.89c-1.067.24-1.275 1.669-.318 2.207l5.277 2.908 8.168-4.776c.25-.127.477.198.273.39L9.05 14.66l.927 5.953c.18 1.084 1.593 1.376 2.182.456l9.644-15.242c.584-.892-.212-2.029-1.234-1.796L2.93 7.89z" fill-rule="evenodd" data-reactid="256"></path></svg></span><!-- react-text: 257 -->分享<!-- /react-text --></button></div><!-- react-empty: 258 --></div><button class="Button ContentItem-action Button--plain Button--withIcon Button--withLabel" type="button" data-reactid="259"><span style="display:inline-flex;align-items:center;" data-reactid="260"><!-- react-text: 261 -->​<!-- /react-text --><svg class="Zi Zi--Star Button-zi" fill="currentColor" viewBox="0 0 24 24" width="1.2em" height="1.2em" data-reactid="262"><path d="M5.515 19.64l.918-5.355-3.89-3.792c-.926-.902-.639-1.784.64-1.97L8.56 7.74l2.404-4.871c.572-1.16 1.5-1.16 2.072 0L15.44 7.74l5.377.782c1.28.186 1.566 1.068.64 1.97l-3.89 3.793.918 5.354c.219 1.274-.532 1.82-1.676 1.218L12 18.33l-4.808 2.528c-1.145.602-1.896.056-1.677-1.218z" fill-rule="evenodd" data-reactid="263"></path></svg></span><!-- react-text: 264 -->收藏<!-- /react-text --></button><button class="Button ContentItem-action Button--plain Button--withIcon Button--withLabel" type="button" data-reactid="265"><span style="display:inline-flex;align-items:center;" data-reactid="266"><!-- react-text: 267 -->​<!-- /react-text --><svg class="Zi Zi--Heart Button-zi" fill="currentColor" viewBox="0 0 24 24" width="1.2em" height="1.2em" data-reactid="268"><path d="M2 8.437C2 5.505 4.294 3.094 7.207 3 9.243 3 11.092 4.19 12 6c.823-1.758 2.649-3 4.651-3C19.545 3 22 5.507 22 8.432 22 16.24 13.842 21 12 21 10.158 21 2 16.24 2 8.437z" fill-rule="evenodd" data-reactid="269"></path></svg></span><!-- react-text: 270 -->感谢<!-- /react-text --></button><button class="Button ContentItem-action ContentItem-rightButton Button--plain" data-zop-retract-question="true" type="button" data-reactid="271"><span class="RichContent-collapsedText" data-reactid="272">收起</span><svg viewBox="0 0 10 6" class="Icon ContentItem-arrowIcon is-active Icon--arrow" style="height:16px;width:10px;" width="10" height="16" aria-hidden="true" data-reactid="273"><title data-reactid="274"></title><g data-reactid="275"><path d="M8.716.217L5.002 4 1.285.218C.99-.072.514-.072.22.218c-.294.29-.294.76 0 1.052l4.25 4.512c.292.29.77.29 1.063 0L9.78 1.27c.293-.29.293-.76 0-1.052-.295-.29-.77-.29-1.063 0z"/></g></svg></button></div></div><!-- react-empty: 276 --><!-- react-empty: 277 --><!-- react-empty: 278 --><!-- react-empty: 279 --><!-- react-empty: 280 --><!-- react-empty: 281 --></div></div><div class="List-item" data-reactid="282"><div class="ContentItem AnswerItem" data-za-index="1" data-zop="{&quot;authorName&quot;:&quot;夏萌吓懵瞎蒙&quot;,&quot;itemId&quot;:52750388,&quot;title&quot;:&quot;AVL树，红黑树，B树，B+树，Trie树都分别应用在哪些现实场景中？&quot;,&quot;type&quot;:&quot;answer&quot;}" name="52750388" itemprop="suggestedAnswer" itemtype="http://schema.org/Answer" itemscope="" data-reactid="283"><div class="ContentItem-meta" data-reactid="284"><div class="AnswerItem-meta AnswerItem-meta--related" data-reactid="285"><div class="AuthorInfo" itemprop="author" itemscope="" itemtype="http://schema.org/Person" data-reactid="286"><meta itemprop="name" content="夏萌吓懵瞎蒙" data-reactid="287"/><meta itemprop="image" content="https://pic2.zhimg.com/50/508ce93be805a58e5852f8ea4f58b9f9_hd.jpg" data-reactid="288"/><meta itemprop="url" content="https://www.zhihu.com/people/simonxia-OMG" data-reactid="289"/><meta itemprop="zhihu:followerCount" content="804" data-reactid="290"/><span class="UserLink AuthorInfo-avatarWrapper" data-reactid="291"><div class="Popover" data-reactid="292"><div id="null-toggle" aria-haspopup="true" aria-expanded="false" aria-owns="null-content" data-reactid="293"><a class="UserLink-link" data-za-detail-view-element_name="User" href="/people/simonxia-OMG" data-reactid="294"><img class="Avatar AuthorInfo-avatar" width="38" height="38" src="https://pic2.zhimg.com/50/508ce93be805a58e5852f8ea4f58b9f9_xs.jpg" srcset="https://pic2.zhimg.com/50/508ce93be805a58e5852f8ea4f58b9f9_l.jpg 2x" alt="夏萌吓懵瞎蒙" data-reactid="295"/></a></div><!-- react-empty: 296 --></div></span><div class="AuthorInfo-content" data-reactid="297"><div class="AuthorInfo-head" data-reactid="298"><span class="UserLink AuthorInfo-name" data-reactid="299"><div class="Popover" data-reactid="300"><div id="null-toggle" aria-haspopup="true" aria-expanded="false" aria-owns="null-content" data-reactid="301"><a class="UserLink-link" data-za-detail-view-element_name="User" href="/people/simonxia-OMG" data-reactid="302">夏萌吓懵瞎蒙</a></div><!-- react-empty: 303 --></div></span></div><div class="AuthorInfo-detail" data-reactid="304"><div class="AuthorInfo-badge" data-reactid="305"><div class="RichText AuthorInfo-badgeText" data-reactid="306">别怕，我只修电脑不过夜</div></div></div></div></div><div class="AnswerItem-extraInfo" data-reactid="307"><span class="Voters" data-reactid="308"><button class="Button Button--plain" type="button" data-reactid="309"><!-- react-text: 310 -->385 人赞同了该回答<!-- /react-text --></button><!-- react-empty: 311 --></span></div></div></div><meta itemprop="image" content="https://pic4.zhimg.com/7bf963de14bc42f21225be5690ae83c7_200x112.jpg" data-reactid="312"/><meta itemprop="upvoteCount" content="385" data-reactid="313"/><meta itemprop="url" content="https://www.zhihu.com/question/30527705/answer/52750388" data-reactid="314"/><meta itemprop="dateCreated" content="2015-06-26T02:11:56.000Z" data-reactid="315"/><meta itemprop="dateModified" content="2015-06-26T02:53:12.000Z" data-reactid="316"/><meta itemprop="commentCount" content="6" data-reactid="317"/><div class="RichContent RichContent--unescapable" data-reactid="318"><div class="RichContent-inner" data-reactid="319"><span class="RichText CopyrightRichText-richText" itemprop="text" data-reactid="320">AVL是一种高度平衡的二叉树，所以通常的结果是，维护这种高度平衡所付出的代价比从中获得的效率收益还大，故而实际的应用不多，更多的地方是用追求局部而不是非常严格整体平衡的红黑树。当然，如果场景中对插入删除不频繁，只是对查找特别有要求，AVL还是优于红黑的。<br><br>红黑树的应用就很多了，除了上面同学提到的STL，还有<br><ul><li>著名的linux进程调度<a href="https://link.zhihu.com/?target=https%3A//en.wikipedia.org/wiki/Completely_Fair_Scheduler" class=" wrap external" target="_blank" rel="nofollow noreferrer">Completely Fair Scheduler<i class="icon-external"></i></a>,用红黑树管理进程控制块<br></li><li>epoll在内核中的实现，用红黑树管理事件块<br></li><li>nginx中，用红黑树管理timer等<br></li><li>Java的TreeMap实现<br></li></ul><br>B和B+主要用在文件系统以及数据库中做索引等，比如Mysql：<a href="https://link.zhihu.com/?target=https%3A//guptavikas.wordpress.com/2012/12/17/b-tree-index-in-mysql/" class=" wrap external" target="_blank" rel="nofollow noreferrer">B-Tree Index in MySql<i class="icon-external"></i></a><br><br>trie 树的一个典型应用是前缀匹配，比如下面这个很常见的场景，在我们输入时，搜索引擎会给予提示<br><br><br><figure><noscript><img src="https://pic4.zhimg.com/50/7bf963de14bc42f21225be5690ae83c7_hd.jpg" data-rawwidth="830" data-rawheight="511" class="origin_image zh-lightbox-thumb" width="830" data-original="https://pic4.zhimg.com/7bf963de14bc42f21225be5690ae83c7_r.jpg"></noscript><img src="data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='830'%20height='511'&gt;&lt;/svg&gt;" data-rawwidth="830" data-rawheight="511" class="origin_image zh-lightbox-thumb lazy" width="830" data-original="https://pic4.zhimg.com/7bf963de14bc42f21225be5690ae83c7_r.jpg" data-actualsrc="https://pic4.zhimg.com/50/7bf963de14bc42f21225be5690ae83c7_hd.jpg"></figure><br>还有比如IP选路，也是前缀匹配，一定程度会用到trie</span><!-- react-empty: 321 --></div><div data-reactid="322"><div class="ContentItem-time" data-reactid="323"><a target="_blank" href="/question/30527705/answer/52750388" data-reactid="324"><span data-tooltip="发布于 2015-06-26" data-reactid="325"><!-- react-text: 326 -->编辑于 <!-- /react-text --><!-- react-text: 327 -->2015-06-26<!-- /react-text --></span></a></div></div><div class="ContentItem-actions RichContent-actions" data-reactid="328"><span data-reactid="329"><button class="Button VoteButton VoteButton--up" aria-label="赞同" type="button" data-reactid="330"><svg viewBox="0 0 20 18" class="Icon VoteButton-upIcon Icon--triangle" style="height:16px;width:9px;" width="9" height="16" aria-hidden="true" data-reactid="331"><title data-reactid="332"></title><g data-reactid="333"><path d="M0 15.243c0-.326.088-.533.236-.896l7.98-13.204C8.57.57 9.086 0 10 0s1.43.57 1.784 1.143l7.98 13.204c.15.363.236.57.236.896 0 1.386-.875 1.9-1.955 1.9H1.955c-1.08 0-1.955-.517-1.955-1.9z"/></g></svg><!-- react-text: 334 -->385<!-- /react-text --></button><button class="Button VoteButton VoteButton--down" aria-label="反对" type="button" data-reactid="335"><svg viewBox="0 0 20 18" class="Icon VoteButton-downIcon Icon--triangle" style="height:16px;width:9px;" width="9" height="16" aria-hidden="true" data-reactid="336"><title data-reactid="337"></title><g data-reactid="338"><path d="M0 15.243c0-.326.088-.533.236-.896l7.98-13.204C8.57.57 9.086 0 10 0s1.43.57 1.784 1.143l7.98 13.204c.15.363.236.57.236.896 0 1.386-.875 1.9-1.955 1.9H1.955c-1.08 0-1.955-.517-1.955-1.9z"/></g></svg></button></span><button class="Button ContentItem-action Button--plain Button--withIcon Button--withLabel" type="button" data-reactid="339"><span style="display:inline-flex;align-items:center;" data-reactid="340"><!-- react-text: 341 -->​<!-- /react-text --><svg class="Zi Zi--Comment Button-zi" fill="currentColor" viewBox="0 0 24 24" width="1.2em" height="1.2em" data-reactid="342"><path d="M10.241 19.313a.97.97 0 0 0-.77.2 7.908 7.908 0 0 1-3.772 1.482.409.409 0 0 1-.38-.637 5.825 5.825 0 0 0 1.11-2.237.605.605 0 0 0-.227-.59A7.935 7.935 0 0 1 3 11.25C3 6.7 7.03 3 12 3s9 3.7 9 8.25-4.373 9.108-10.759 8.063z" fill-rule="evenodd" data-reactid="343"></path></svg></span><!-- react-text: 344 -->6 条评论<!-- /react-text --></button><div class="Popover ShareMenu ContentItem-action" data-reactid="345"><div class="" id="null-toggle" aria-haspopup="true" aria-expanded="false" aria-owns="null-content" data-reactid="346"><button class="Button Button--plain Button--withIcon Button--withLabel" type="button" data-reactid="347"><span style="display:inline-flex;align-items:center;" data-reactid="348"><!-- react-text: 349 -->​<!-- /react-text --><svg class="Zi Zi--Share Button-zi" fill="currentColor" viewBox="0 0 24 24" width="1.2em" height="1.2em" data-reactid="350"><path d="M2.931 7.89c-1.067.24-1.275 1.669-.318 2.207l5.277 2.908 8.168-4.776c.25-.127.477.198.273.39L9.05 14.66l.927 5.953c.18 1.084 1.593 1.376 2.182.456l9.644-15.242c.584-.892-.212-2.029-1.234-1.796L2.93 7.89z" fill-rule="evenodd" data-reactid="351"></path></svg></span><!-- react-text: 352 -->分享<!-- /react-text --></button></div><!-- react-empty: 353 --></div><button class="Button ContentItem-action Button--plain Button--withIcon Button--withLabel" type="button" data-reactid="354"><span style="display:inline-flex;align-items:center;" data-reactid="355"><!-- react-text: 356 -->​<!-- /react-text --><svg class="Zi Zi--Star Button-zi" fill="currentColor" viewBox="0 0 24 24" width="1.2em" height="1.2em" data-reactid="357"><path d="M5.515 19.64l.918-5.355-3.89-3.792c-.926-.902-.639-1.784.64-1.97L8.56 7.74l2.404-4.871c.572-1.16 1.5-1.16 2.072 0L15.44 7.74l5.377.782c1.28.186 1.566 1.068.64 1.97l-3.89 3.793.918 5.354c.219 1.274-.532 1.82-1.676 1.218L12 18.33l-4.808 2.528c-1.145.602-1.896.056-1.677-1.218z" fill-rule="evenodd" data-reactid="358"></path></svg></span><!-- react-text: 359 -->收藏<!-- /react-text --></button><button class="Button ContentItem-action Button--plain Button--withIcon Button--withLabel" type="button" data-reactid="360"><span style="display:inline-flex;align-items:center;" data-reactid="361"><!-- react-text: 362 -->​<!-- /react-text --><svg class="Zi Zi--Heart Button-zi" fill="currentColor" viewBox="0 0 24 24" width="1.2em" height="1.2em" data-reactid="363"><path d="M2 8.437C2 5.505 4.294 3.094 7.207 3 9.243 3 11.092 4.19 12 6c.823-1.758 2.649-3 4.651-3C19.545 3 22 5.507 22 8.432 22 16.24 13.842 21 12 21 10.158 21 2 16.24 2 8.437z" fill-rule="evenodd" data-reactid="364"></path></svg></span><!-- react-text: 365 -->感谢<!-- /react-text --></button><button class="Button ContentItem-action ContentItem-rightButton Button--plain" data-zop-retract-question="true" type="button" data-reactid="366"><span class="RichContent-collapsedText" data-reactid="367">收起</span><svg viewBox="0 0 10 6" class="Icon ContentItem-arrowIcon is-active Icon--arrow" style="height:16px;width:10px;" width="10" height="16" aria-hidden="true" data-reactid="368"><title data-reactid="369"></title><g data-reactid="370"><path d="M8.716.217L5.002 4 1.285.218C.99-.072.514-.072.22.218c-.294.29-.294.76 0 1.052l4.25 4.512c.292.29.77.29 1.063 0L9.78 1.27c.293-.29.293-.76 0-1.052-.295-.29-.77-.29-1.063 0z"/></g></svg></button></div></div><!-- react-empty: 371 --><!-- react-empty: 372 --><!-- react-empty: 373 --><!-- react-empty: 374 --><!-- react-empty: 375 --><!-- react-empty: 376 --></div></div><!-- react-empty: 377 --><div data-reactid="378"></div></div></div></div></div><div class="Card" data-reactid="379"><button class="Button QuestionMainAction" type="button" data-reactid="380"><!-- react-text: 381 -->查看更多回答<!-- /react-text --></button></div></div></div></div><!-- react-empty: 382 --></div><!-- react-empty: 383 --></div></main><!-- react-empty: 384 --><!-- react-empty: 385 --><!-- react-empty: 386 --><!-- react-empty: 387 --></div></div><div id="data" style="display:none;" data-state="{&quot;loading&quot;:{&quot;global&quot;:{&quot;count&quot;:0},&quot;local&quot;:{&quot;token/&quot;:false,&quot;env/getExperiments/&quot;:false,&quot;config/getAppConfig/&quot;:false,&quot;question/get/&quot;:false,&quot;question/getAnswers/30527705&quot;:false}},&quot;entities&quot;:{&quot;users&quot;:{},&quot;questions&quot;:{&quot;30527705&quot;:{&quot;status&quot;:{&quot;isLocked&quot;:false,&quot;isClose&quot;:false,&quot;isEvaluate&quot;:false,&quot;isSuggest&quot;:false},&quot;relationship&quot;:{&quot;concernedFollowers&quot;:[],&quot;isAnonymous&quot;:false,&quot;canLock&quot;:false,&quot;isFollowing&quot;:false,&quot;isAuthor&quot;:false,&quot;canCollapseAnswers&quot;:false,&quot;canStickAnswers&quot;:false},&quot;isMuted&quot;:false,&quot;topics&quot;:[{&quot;introduction&quot;:&quot;在数学和计算机科学之中，算法（Algorithm）为一个计算的具体步骤，常用于计算、数据处理和自动推理。精确而言，算法是一个表示为有限长列表的有效方法。算法应包含清晰定义的指令用于计算函数。&lt;br&gt;&lt;br&gt;来自维基百科：&lt;a href=\&quot;http://zh.wikipedia.org/zh-cn/%E7%AE%97%E6%B3%95\&quot; data-editable=\&quot;true\&quot; data-title=\&quot;算法\&quot; class=\&quot;\&quot;&gt;算法&lt;/a&gt;&quot;,&quot;avatarUrl&quot;:&quot;https://pic2.zhimg.com/50/2e6276881_hd.jpg&quot;,&quot;name&quot;:&quot;算法&quot;,&quot;url&quot;:&quot;http://www.zhihu.com/api/v4/topics/19553510&quot;,&quot;type&quot;:&quot;topic&quot;,&quot;excerpt&quot;:&quot;在数学和计算机科学之中，算法（Algorithm）为一个计算的具体步骤，常用于计算、数据处理和自动推理。精确而言，算法是一个表示为有限长列表的有效方法。算法应包含清晰定义的指令用于计算函数。 来自维基百科：算法 &quot;,&quot;id&quot;:&quot;19553510&quot;},{&quot;introduction&quot;:&quot;算法与数据结构&lt;br&gt;( Algorithms and data structures )包括算法分析( &lt;a href=\&quot;http://en.wikipedia.org/wiki/Analysis_of_algorithms\&quot; data-editable=\&quot;true\&quot; data-title=\&quot;Analysis of algorithms\&quot; class=\&quot;\&quot;&gt;Analysis of algorithms&lt;/a&gt; )，算法( &lt;a href=\&quot;http://en.wikipedia.org/wiki/Algorithm\&quot; data-editable=\&quot;true\&quot; data-title=\&quot;Algorithms\&quot; class=\&quot;\&quot;&gt;Algorithms&lt;/a&gt; )，数据结构( &lt;a href=\&quot;http://en.wikipedia.org/wiki/Data_structures\&quot; data-editable=\&quot;true\&quot; data-title=\&quot;Data structures\&quot; class=\&quot;\&quot;&gt;Data structures&lt;/a&gt; )以及计算几何( &lt;a href=\&quot;http://en.wikipedia.org/wiki/Computational_geometry\&quot; data-editable=\&quot;true\&quot; data-title=\&quot;Computational geometry\&quot; class=\&quot;\&quot;&gt;Computational geometry&lt;/a&gt; )&lt;br&gt;Golden Formula: Algorithms + Data Structures = Programs&quot;,&quot;avatarUrl&quot;:&quot;https://pic4.zhimg.com/50/2a904880b_hd.jpg&quot;,&quot;name&quot;:&quot;算法与数据结构&quot;,&quot;url&quot;:&quot;http://www.zhihu.com/api/v4/topics/19625716&quot;,&quot;type&quot;:&quot;topic&quot;,&quot;excerpt&quot;:&quot;算法与数据结构 ( Algorithms and data structures )包括算法分析( Analysis of algorithms )，算法( Algorithms )，数据结构( Data structures )以及计算几何( Computational geometry ) Golden Formula: Algorithms + Data Structures = Programs&quot;,&quot;id&quot;:&quot;19625716&quot;},{&quot;introduction&quot;:&quot;&quot;,&quot;avatarUrl&quot;:&quot;https://pic1.zhimg.com/50/e82bab09c_hd.jpg&quot;,&quot;name&quot;:&quot;红黑树&quot;,&quot;url&quot;:&quot;http://www.zhihu.com/api/v4/topics/19648609&quot;,&quot;type&quot;:&quot;topic&quot;,&quot;excerpt&quot;:&quot;&quot;,&quot;id&quot;:&quot;19648609&quot;},{&quot;introduction&quot;:&quot;&quot;,&quot;avatarUrl&quot;:&quot;https://pic3.zhimg.com/50/v2-164e4c6a5f23f33b879773b2924ad64a_hd.jpg&quot;,&quot;name&quot;:&quot;树（数据结构）&quot;,&quot;url&quot;:&quot;http://www.zhihu.com/api/v4/topics/19680489&quot;,&quot;type&quot;:&quot;topic&quot;,&quot;excerpt&quot;:&quot;&quot;,&quot;id&quot;:&quot;19680489&quot;},{&quot;introduction&quot;:&quot;B树的目的为了硬盘快速读取数据（降低IO操作次树）而设计的一种平衡的多路查找树。目前大多数据库及文件索引，都是使用B树或变形来存储实现。&quot;,&quot;avatarUrl&quot;:&quot;https://pic3.zhimg.com/50/v2-164e4c6a5f23f33b879773b2924ad64a_hd.jpg&quot;,&quot;name&quot;:&quot;B/B+树&quot;,&quot;url&quot;:&quot;http://www.zhihu.com/api/v4/topics/20091609&quot;,&quot;type&quot;:&quot;topic&quot;,&quot;excerpt&quot;:&quot;B树的目的为了硬盘快速读取数据（降低IO操作次树）而设计的一种平衡的多路查找树。目前大多数据库及文件索引，都是使用B树或变形来存储实现。&quot;,&quot;id&quot;:&quot;20091609&quot;}],&quot;excerpt&quot;:&quot;&quot;,&quot;adminClosedComment&quot;:false,&quot;isEditable&quot;:false,&quot;reviewInfo&quot;:{&quot;type&quot;:&quot;&quot;,&quot;tips&quot;:&quot;&quot;,&quot;editTips&quot;:&quot;&quot;,&quot;isReviewing&quot;:false},&quot;answerCount&quot;:25,&quot;editableDetail&quot;:&quot;&quot;,&quot;visitCount&quot;:167971,&quot;id&quot;:30527705,&quot;collapsedAnswerCount&quot;:4,&quot;author&quot;:{&quot;avatarUrlTemplate&quot;:&quot;https://pic1.zhimg.com/50/da8e974dc_hd.jpg&quot;,&quot;badge&quot;:[],&quot;name&quot;:&quot;知乎用户&quot;,&quot;url&quot;:&quot;http://www.zhihu.com/api/v4/people/0&quot;,&quot;gender&quot;:0,&quot;userType&quot;:&quot;people&quot;,&quot;urlToken&quot;:&quot;&quot;,&quot;isAdvertiser&quot;:false,&quot;avatarUrl&quot;:&quot;https://pic1.zhimg.com/50/da8e974dc_hd.jpg&quot;,&quot;isFollowing&quot;:false,&quot;isOrg&quot;:false,&quot;headline&quot;:&quot;&quot;,&quot;type&quot;:&quot;people&quot;,&quot;id&quot;:&quot;d804bab74b1ed662b7479bd88b05f60d&quot;},&quot;url&quot;:&quot;http://www.zhihu.com/api/v4/questions/30527705&quot;,&quot;commentPermission&quot;:&quot;all&quot;,&quot;created&quot;:1432107359,&quot;detail&quot;:&quot;&quot;,&quot;updatedTime&quot;:1511251883,&quot;hasPublishingDraft&quot;:false,&quot;commentCount&quot;:0,&quot;questionType&quot;:&quot;normal&quot;,&quot;followerCount&quot;:5889,&quot;title&quot;:&quot;AVL树，红黑树，B树，B+树，Trie树都分别应用在哪些现实场景中？&quot;,&quot;canComment&quot;:{&quot;status&quot;:true,&quot;reason&quot;:&quot;&quot;},&quot;type&quot;:&quot;question&quot;,&quot;isNormal&quot;:true}},&quot;answers&quot;:{&quot;52527887&quot;:{&quot;suggestEdit&quot;:{&quot;status&quot;:false,&quot;reason&quot;:&quot;&quot;,&quot;title&quot;:&quot;&quot;,&quot;url&quot;:&quot;&quot;,&quot;unnormalDetails&quot;:{},&quot;tip&quot;:&quot;&quot;},&quot;relationship&quot;:{&quot;upvotedFollowees&quot;:[],&quot;isAuthor&quot;:false,&quot;isNothelp&quot;:false,&quot;isAuthorized&quot;:false,&quot;voting&quot;:0,&quot;isThanked&quot;:false},&quot;editableContent&quot;:&quot;&quot;,&quot;markInfos&quot;:[],&quot;excerpt&quot;:&quot;&lt;b&gt;AVL树&lt;/b&gt;: 最早的平衡二叉树之一。应用相对其他数据结构比较少。windows对进程地址空间的管理用到了AVL树。&lt;b&gt;红黑树&lt;/b&gt;: 平衡二叉树，广泛用在C++的STL中。如map和set都是用红黑树实现的。&lt;b&gt;B/B+树: &lt;/b&gt;用在磁盘文件组织 数据索引和数据库索引。&lt;b&gt;Trie树(字典树): &lt;/b&gt;用在统计…&quot;,&quot;annotationAction&quot;:[],&quot;adminClosedComment&quot;:false,&quot;collapsedBy&quot;:&quot;nobody&quot;,&quot;canComment&quot;:{&quot;status&quot;:true,&quot;reason&quot;:&quot;&quot;},&quot;createdTime&quot;:1435130906,&quot;id&quot;:52527887,&quot;voteupCount&quot;:457,&quot;collapseReason&quot;:&quot;&quot;,&quot;isCollapsed&quot;:false,&quot;isSticky&quot;:false,&quot;url&quot;:&quot;http://www.zhihu.com/api/v4/answers/52527887&quot;,&quot;commentPermission&quot;:&quot;all&quot;,&quot;author&quot;:{&quot;avatarUrlTemplate&quot;:&quot;https://pic3.zhimg.com/50/v2-7083e6c4453962882220e9ec82c09dbe_hd.jpg&quot;,&quot;badge&quot;:[],&quot;type&quot;:&quot;people&quot;,&quot;name&quot;:&quot;Bill Utada&quot;,&quot;url&quot;:&quot;http://www.zhihu.com/api/v4/people/6394f7e20c829eaefa47fe8f711bd28a&quot;,&quot;gender&quot;:1,&quot;userType&quot;:&quot;people&quot;,&quot;isAdvertiser&quot;:false,&quot;avatarUrl&quot;:&quot;https://pic3.zhimg.com/50/v2-7083e6c4453962882220e9ec82c09dbe_hd.jpg&quot;,&quot;isOrg&quot;:false,&quot;headline&quot;:&quot;听点音乐，写点游戏。&quot;,&quot;followerCount&quot;:184,&quot;urlToken&quot;:&quot;bill-utada&quot;,&quot;id&quot;:&quot;6394f7e20c829eaefa47fe8f711bd28a&quot;},&quot;question&quot;:{&quot;questionType&quot;:&quot;normal&quot;,&quot;created&quot;:1432107359,&quot;url&quot;:&quot;http://www.zhihu.com/api/v4/questions/30527705&quot;,&quot;title&quot;:&quot;AVL树，红黑树，B树，B+树，Trie树都分别应用在哪些现实场景中？&quot;,&quot;type&quot;:&quot;question&quot;,&quot;id&quot;:30527705,&quot;updatedTime&quot;:1511251883},&quot;updatedTime&quot;:1504685079,&quot;content&quot;:&quot;&lt;p&gt;&lt;b&gt;AVL树&lt;/b&gt;:  最早的平衡二叉树之一。应用相对其他数据结构比较少。windows对进程地址空间的管理用到了AVL树。&lt;/p&gt;&lt;p&gt;&lt;b&gt;红黑树&lt;/b&gt;: 平衡二叉树，广泛用在C++的STL中。如map和set都是用红黑树实现的。&lt;/p&gt;&lt;p&gt;&lt;b&gt;B/B+树: &lt;/b&gt;用在磁盘文件组织 数据索引和数据库索引。&lt;/p&gt;&lt;p&gt;&lt;b&gt;Trie树(字典树): &lt;/b&gt;用在统计和排序大量字符串，如自动机。&lt;/p&gt;&quot;,&quot;commentCount&quot;:12,&quot;extras&quot;:&quot;&quot;,&quot;reshipmentSettings&quot;:&quot;need_payment&quot;,&quot;rewardInfo&quot;:{&quot;rewardMemberCount&quot;:0,&quot;isRewardable&quot;:false,&quot;rewardTotalMoney&quot;:0,&quot;canOpenReward&quot;:false,&quot;tagline&quot;:&quot;&quot;},&quot;isCopyable&quot;:false,&quot;type&quot;:&quot;answer&quot;,&quot;thumbnail&quot;:&quot;&quot;,&quot;isNormal&quot;:true},&quot;52750388&quot;:{&quot;suggestEdit&quot;:{&quot;status&quot;:false,&quot;reason&quot;:&quot;&quot;,&quot;title&quot;:&quot;&quot;,&quot;url&quot;:&quot;&quot;,&quot;unnormalDetails&quot;:{},&quot;tip&quot;:&quot;&quot;},&quot;relationship&quot;:{&quot;upvotedFollowees&quot;:[],&quot;isAuthor&quot;:false,&quot;isNothelp&quot;:false,&quot;isAuthorized&quot;:false,&quot;voting&quot;:0,&quot;isThanked&quot;:false},&quot;editableContent&quot;:&quot;&quot;,&quot;markInfos&quot;:[],&quot;excerpt&quot;:&quot;AVL是一种高度平衡的二叉树，所以通常的结果是，维护这种高度平衡所付出的代价比从中获得的效率收益还大，故而实际的应用不多，更多的地方是用追求局部而不是非常严格整体平衡的红黑树。当然，如果场景中对插入删除不频繁，只是对查找特别有要求，AVL还是优…&quot;,&quot;annotationAction&quot;:[],&quot;adminClosedComment&quot;:false,&quot;collapsedBy&quot;:&quot;nobody&quot;,&quot;canComment&quot;:{&quot;status&quot;:true,&quot;reason&quot;:&quot;&quot;},&quot;createdTime&quot;:1435284716,&quot;id&quot;:52750388,&quot;voteupCount&quot;:385,&quot;collapseReason&quot;:&quot;&quot;,&quot;isCollapsed&quot;:false,&quot;isSticky&quot;:false,&quot;url&quot;:&quot;http://www.zhihu.com/api/v4/answers/52750388&quot;,&quot;commentPermission&quot;:&quot;all&quot;,&quot;author&quot;:{&quot;avatarUrlTemplate&quot;:&quot;https://pic2.zhimg.com/50/508ce93be805a58e5852f8ea4f58b9f9_hd.jpg&quot;,&quot;badge&quot;:[],&quot;type&quot;:&quot;people&quot;,&quot;name&quot;:&quot;夏萌吓懵瞎蒙&quot;,&quot;url&quot;:&quot;http://www.zhihu.com/api/v4/people/d5b1ef5682e3799087404a8f9f9911a2&quot;,&quot;gender&quot;:1,&quot;userType&quot;:&quot;people&quot;,&quot;isAdvertiser&quot;:false,&quot;avatarUrl&quot;:&quot;https://pic2.zhimg.com/50/508ce93be805a58e5852f8ea4f58b9f9_hd.jpg&quot;,&quot;isOrg&quot;:false,&quot;headline&quot;:&quot;别怕，我只修电脑不过夜&quot;,&quot;followerCount&quot;:804,&quot;urlToken&quot;:&quot;simonxia-OMG&quot;,&quot;id&quot;:&quot;d5b1ef5682e3799087404a8f9f9911a2&quot;},&quot;question&quot;:{&quot;questionType&quot;:&quot;normal&quot;,&quot;created&quot;:1432107359,&quot;url&quot;:&quot;http://www.zhihu.com/api/v4/questions/30527705&quot;,&quot;title&quot;:&quot;AVL树，红黑树，B树，B+树，Trie树都分别应用在哪些现实场景中？&quot;,&quot;type&quot;:&quot;question&quot;,&quot;id&quot;:30527705,&quot;updatedTime&quot;:1511251883},&quot;updatedTime&quot;:1435287192,&quot;content&quot;:&quot;AVL是一种高度平衡的二叉树，所以通常的结果是，维护这种高度平衡所付出的代价比从中获得的效率收益还大，故而实际的应用不多，更多的地方是用追求局部而不是非常严格整体平衡的红黑树。当然，如果场景中对插入删除不频繁，只是对查找特别有要求，AVL还是优于红黑的。&lt;br&gt;&lt;br&gt;红黑树的应用就很多了，除了上面同学提到的STL，还有&lt;br&gt;&lt;ul&gt;&lt;li&gt;著名的linux进程调度&lt;a href=\&quot;https://link.zhihu.com/?target=https%3A//en.wikipedia.org/wiki/Completely_Fair_Scheduler\&quot; class=\&quot; wrap external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;Completely Fair Scheduler&lt;i class=\&quot;icon-external\&quot;&gt;&lt;/i&gt;&lt;/a&gt;,用红黑树管理进程控制块&lt;br&gt;&lt;/li&gt;&lt;li&gt;epoll在内核中的实现，用红黑树管理事件块&lt;br&gt;&lt;/li&gt;&lt;li&gt;nginx中，用红黑树管理timer等&lt;br&gt;&lt;/li&gt;&lt;li&gt;Java的TreeMap实现&lt;br&gt;&lt;/li&gt;&lt;/ul&gt;&lt;br&gt;B和B+主要用在文件系统以及数据库中做索引等，比如Mysql：&lt;a href=\&quot;https://link.zhihu.com/?target=https%3A//guptavikas.wordpress.com/2012/12/17/b-tree-index-in-mysql/\&quot; class=\&quot; wrap external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;B-Tree Index in MySql&lt;i class=\&quot;icon-external\&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;br&gt;trie 树的一个典型应用是前缀匹配，比如下面这个很常见的场景，在我们输入时，搜索引擎会给予提示&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;figure&gt;&lt;noscript&gt;&lt;img src=\&quot;https://pic4.zhimg.com/50/7bf963de14bc42f21225be5690ae83c7_hd.jpg\&quot; data-rawwidth=\&quot;830\&quot; data-rawheight=\&quot;511\&quot; class=\&quot;origin_image zh-lightbox-thumb\&quot; width=\&quot;830\&quot; data-original=\&quot;https://pic4.zhimg.com/7bf963de14bc42f21225be5690ae83c7_r.jpg\&quot;&gt;&lt;/noscript&gt;&lt;img src=\&quot;data:image/svg+xml;utf8,&amp;lt;svg%20xmlns=&#x27;http://www.w3.org/2000/svg&#x27;%20width=&#x27;830&#x27;%20height=&#x27;511&#x27;&amp;gt;&amp;lt;/svg&amp;gt;\&quot; data-rawwidth=\&quot;830\&quot; data-rawheight=\&quot;511\&quot; class=\&quot;origin_image zh-lightbox-thumb lazy\&quot; width=\&quot;830\&quot; data-original=\&quot;https://pic4.zhimg.com/7bf963de14bc42f21225be5690ae83c7_r.jpg\&quot; data-actualsrc=\&quot;https://pic4.zhimg.com/50/7bf963de14bc42f21225be5690ae83c7_hd.jpg\&quot;&gt;&lt;/figure&gt;&lt;br&gt;还有比如IP选路，也是前缀匹配，一定程度会用到trie&quot;,&quot;commentCount&quot;:6,&quot;extras&quot;:&quot;&quot;,&quot;reshipmentSettings&quot;:&quot;allowed&quot;,&quot;rewardInfo&quot;:{&quot;rewardMemberCount&quot;:0,&quot;isRewardable&quot;:false,&quot;rewardTotalMoney&quot;:0,&quot;canOpenReward&quot;:false,&quot;tagline&quot;:&quot;&quot;},&quot;isCopyable&quot;:true,&quot;type&quot;:&quot;answer&quot;,&quot;thumbnail&quot;:&quot;https://pic4.zhimg.com/7bf963de14bc42f21225be5690ae83c7_200x112.jpg&quot;,&quot;isNormal&quot;:true},&quot;259948086&quot;:{&quot;suggestEdit&quot;:{&quot;status&quot;:false,&quot;reason&quot;:&quot;&quot;,&quot;title&quot;:&quot;&quot;,&quot;url&quot;:&quot;&quot;,&quot;unnormalDetails&quot;:{},&quot;tip&quot;:&quot;&quot;},&quot;relationship&quot;:{&quot;upvotedFollowees&quot;:[],&quot;isAuthor&quot;:false,&quot;isNothelp&quot;:false,&quot;isAuthorized&quot;:false,&quot;voting&quot;:0,&quot;isThanked&quot;:false},&quot;editableContent&quot;:&quot;&quot;,&quot;markInfos&quot;:[],&quot;excerpt&quot;:&quot;楼上楼下AVL被批的很惨，给 AVL 树平反昭雪，今天优化了一下我之前的 AVL 树，总体跑的和 linux 的 rbtree 一样快了：他们都比 std::map 快很多（即便使用动态内存分配，为每个新插入节点临时分配个新内存）。其他 AVL/RBTREE 评测也有类似的结论，见：&lt;a href=\&quot;https://link.zhihu.com/?target=http%3A//stlavlmap.sourceforge.net/\&quot; class=\&quot; wrap external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;STL …&lt;i class=\&quot;icon-external\&quot;&gt;&lt;/i&gt;&lt;/a&gt;&quot;,&quot;annotationAction&quot;:[],&quot;adminClosedComment&quot;:false,&quot;collapsedBy&quot;:&quot;nobody&quot;,&quot;canComment&quot;:{&quot;status&quot;:true,&quot;reason&quot;:&quot;&quot;},&quot;createdTime&quot;:1510677144,&quot;id&quot;:259948086,&quot;voteupCount&quot;:296,&quot;collapseReason&quot;:&quot;&quot;,&quot;isCollapsed&quot;:false,&quot;isSticky&quot;:false,&quot;url&quot;:&quot;http://www.zhihu.com/api/v4/answers/259948086&quot;,&quot;commentPermission&quot;:&quot;all&quot;,&quot;author&quot;:{&quot;avatarUrlTemplate&quot;:&quot;https://pic3.zhimg.com/50/e4f1b0d6aa782bb9b0dee1ea384fe556_hd.jpg&quot;,&quot;badge&quot;:[{&quot;topics&quot;:[{&quot;introduction&quot;:&quot;游戏开发(Game Development)是将一系列关于娱乐体验上带有创造性的想法，以可运行的电子游戏为载体所实现的过程。传统电子游戏由开发商制作后交由发行商进行发行工作，而独立游戏则往往由规模较小的团队或个人进行开发工作。&lt;br&gt;&lt;br&gt;游戏开发涉及了多个领域的知识，其团队通常也具有明确的分工，如游戏美术、游戏程序员、游戏策划、游戏测试等。开发游戏的过程通常会以阶段划分。在早期阶段主要确立游戏概念与游戏原型，在随后的开发过程中再将上述部分以工业化的高标准交予各个职责部门一一细化实现。在开发阶段完成以后，游戏还要经历市场推广和运营维护等必不可少的步骤，直到其生命周期结束。&quot;,&quot;avatarUrl&quot;:&quot;https://pic3.zhimg.com/50/130887c7689dc9631634a26a5f3df106_hd.jpg&quot;,&quot;name&quot;:&quot;游戏开发&quot;,&quot;url&quot;:&quot;http://www.zhihu.com/api/v4/topics/19553361&quot;,&quot;type&quot;:&quot;topic&quot;,&quot;excerpt&quot;:&quot;游戏开发(Game Development)是将一系列关于娱乐体验上带有创造性的想法，以可运行的电子游戏为载体所实现的过程。传统电子游戏由开发商制作后交由发行商进行发行工作，而独立游戏则往往由规模较小的团队或个人进行开发工作。 游戏开发涉及了多个领域的知识，其团队通常也具有明确的分工，如游戏美术、游戏程序员、游戏策划、游戏测试等。开发游戏的过程通常会以阶段划分。在早期阶段主要确立游戏概念与游戏原型，在随后的开发过…&quot;,&quot;id&quot;:&quot;19553361&quot;},{&quot;introduction&quot;:&quot;人们为了让计算机解决各种棘手的问题，使用编程语言&lt;b&gt;编写程序代码&lt;/b&gt;并通过计算机运算得到最终结果的过程。&quot;,&quot;avatarUrl&quot;:&quot;https://pic2.zhimg.com/50/v2-4030982b9aed71d12b350a4c3ba5078d_hd.png&quot;,&quot;name&quot;:&quot;编程&quot;,&quot;url&quot;:&quot;http://www.zhihu.com/api/v4/topics/19554298&quot;,&quot;type&quot;:&quot;topic&quot;,&quot;excerpt&quot;:&quot;人们为了让计算机解决各种棘手的问题，使用编程语言编写程序代码并通过计算机运算得到最终结果的过程。&quot;,&quot;id&quot;:&quot;19554298&quot;},{&quot;introduction&quot;:&quot;程序员可以指在程序设计与互联网某个专业领域中的专业人士或是从事软件撰写，程序开发、维护的专业人员。&quot;,&quot;avatarUrl&quot;:&quot;https://pic3.zhimg.com/50/acda162ad89c9b8995b51028d5233d1a_hd.jpg&quot;,&quot;name&quot;:&quot;程序员&quot;,&quot;url&quot;:&quot;http://www.zhihu.com/api/v4/topics/19552330&quot;,&quot;type&quot;:&quot;topic&quot;,&quot;excerpt&quot;:&quot;程序员可以指在程序设计与互联网某个专业领域中的专业人士或是从事软件撰写，程序开发、维护的专业人员。&quot;,&quot;id&quot;:&quot;19552330&quot;}],&quot;type&quot;:&quot;best_answerer&quot;,&quot;description&quot;:&quot;优秀回答者&quot;}],&quot;type&quot;:&quot;people&quot;,&quot;name&quot;:&quot;韦易笑&quot;,&quot;url&quot;:&quot;http://www.zhihu.com/api/v4/people/225cbdbbfac26810c6b71ce96f55de2f&quot;,&quot;gender&quot;:1,&quot;userType&quot;:&quot;people&quot;,&quot;isAdvertiser&quot;:false,&quot;avatarUrl&quot;:&quot;https://pic3.zhimg.com/50/e4f1b0d6aa782bb9b0dee1ea384fe556_hd.jpg&quot;,&quot;isOrg&quot;:false,&quot;headline&quot;:&quot;Putty本无树，MinGW亦非台&quot;,&quot;followerCount&quot;:38478,&quot;urlToken&quot;:&quot;skywind3000&quot;,&quot;id&quot;:&quot;225cbdbbfac26810c6b71ce96f55de2f&quot;},&quot;question&quot;:{&quot;questionType&quot;:&quot;normal&quot;,&quot;created&quot;:1432107359,&quot;url&quot;:&quot;http://www.zhihu.com/api/v4/questions/30527705&quot;,&quot;title&quot;:&quot;AVL树，红黑树，B树，B+树，Trie树都分别应用在哪些现实场景中？&quot;,&quot;type&quot;:&quot;question&quot;,&quot;id&quot;:30527705,&quot;updatedTime&quot;:1511251883},&quot;updatedTime&quot;:1510826510,&quot;content&quot;:&quot;&lt;p&gt;楼上楼下AVL被批的很惨，给 AVL 树平反昭雪，今天优化了一下我之前的 AVL 树，总体跑的和 linux 的 rbtree 一样快了：&lt;/p&gt;&lt;figure&gt;&lt;noscript&gt;&lt;img data-rawheight=\&quot;184\&quot; src=\&quot;https://pic3.zhimg.com/50/v2-3b0dd24fe1bc5e5940cc405233ce1e0e_hd.jpg\&quot; data-size=\&quot;normal\&quot; data-rawwidth=\&quot;775\&quot; class=\&quot;origin_image zh-lightbox-thumb\&quot; width=\&quot;775\&quot; data-original=\&quot;https://pic3.zhimg.com/v2-3b0dd24fe1bc5e5940cc405233ce1e0e_r.jpg\&quot;&gt;&lt;/noscript&gt;&lt;img data-rawheight=\&quot;184\&quot; src=\&quot;data:image/svg+xml;utf8,&amp;lt;svg%20xmlns=&#x27;http://www.w3.org/2000/svg&#x27;%20width=&#x27;775&#x27;%20height=&#x27;184&#x27;&amp;gt;&amp;lt;/svg&amp;gt;\&quot; data-size=\&quot;normal\&quot; data-rawwidth=\&quot;775\&quot; class=\&quot;origin_image zh-lightbox-thumb lazy\&quot; width=\&quot;775\&quot; data-original=\&quot;https://pic3.zhimg.com/v2-3b0dd24fe1bc5e5940cc405233ce1e0e_r.jpg\&quot; data-actualsrc=\&quot;https://pic3.zhimg.com/50/v2-3b0dd24fe1bc5e5940cc405233ce1e0e_hd.jpg\&quot;&gt;&lt;/figure&gt;&lt;p&gt;他们都比 std::map 快很多（即便使用动态内存分配，为每个新插入节点临时分配个新内存）。&lt;/p&gt;&lt;p&gt;其他 AVL/RBTREE 评测也有类似的结论，见：&lt;a href=\&quot;https://link.zhihu.com/?target=http%3A//stlavlmap.sourceforge.net/\&quot; class=\&quot; wrap external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;STL AVL Map&lt;i class=\&quot;icon-external\&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;谣言1：RBTREE的平均统计性能比 AVL 好&lt;/b&gt;&lt;/p&gt;&lt;p&gt;统计下来一千万个节点插入 AVL 共旋转 &lt;a href=\&quot;tel:7053316\&quot;&gt;7053316&lt;/a&gt; 次（先左后右算两次），RBTREE共旋转 &lt;a href=\&quot;tel:5887217\&quot;&gt;5887217&lt;/a&gt; 次，RBTREE看起来少是吧？应该很快？但是别忘了 RBTREE 再平衡的操作除了旋转外还有再着色，每次再平衡噼里啪啦的改一片颜色，父亲节点，叔叔，祖父，兄弟节点都要访问一圈，这些都是代价，再者平均树高比 AVL 高也成为各项操作的成本。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;谣言2：RBTREE 一般情况只比 AVL 高一两层，这个代价忽略不计&lt;/b&gt;&lt;/p&gt;&lt;p&gt;纯粹谣言，随便随机一下，一百万个节点的 RBTREE 树高27，和一千万个节点的 AVL树相同，而一千万个节点的 RBTREE 树高 33，比 AVL 多了 6 层，这还不是最坏情况，最坏情况 AVL 只有 1.440 * log(n + 2) - 0.328, 而 RBTREE 是 2 * log(n + 1)，也就是说同样100万个节点，AVL最坏情况是 28 层，rbtree 最坏可以到 39 层。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;谣言3：AVL树删除节点是需要回溯到根节点&lt;/b&gt;&lt;/p&gt;&lt;p&gt;我以前也是这么写 AVL 树的，后来发现根据 AVL 的定义，可以做出两个推论，再平衡向上回溯时：&lt;/p&gt;&lt;p&gt;插入更新时：如当前节点的&lt;b&gt;高度没有改变&lt;/b&gt;，则上面所有父节点的高度和平衡也不会改变。&lt;br&gt;删除更新时：如当前节点的&lt;b&gt;高度没有改变&lt;/b&gt;且&lt;b&gt;平衡值在 [-1, 1] 区间&lt;/b&gt;，则所有父节点的高度和平衡都不会改变。&lt;/p&gt;&lt;p&gt;根据这两个推论，AVL的插入和删除大部分时候只需要向上回溯一两个节点即可，范围十分紧凑。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;谣言4：虽然二者插入一万个节点总时间类似，但是rbtree树更平均，avl有时很快，有时慢很多，rbtree 只需要旋转两次重新染色就行了，比 avl 平均&lt;/b&gt;&lt;/p&gt;&lt;p&gt;完全说反了，avl是公认的比rbtree平均的数据结构，插入时间更为平均，rbtree才是不均衡，有时候直接插入就返回了（上面是黑色节点），有时候插入要染色几个节点但不旋转，有时候还要两次旋转再染色然后递归到父节点。该说法最大的问题是以为 rbtree 插入节点最坏情况是两次旋转加染色，可是忘记了一条，&lt;b&gt;需要向父节点递归&lt;/b&gt;，比如：当前节点需要旋转两次重染色，然后递归到父节点再旋转两次重染色，再递归到父节点的父节点，直到满足 rbtree 的5个条件。这种说法直接把递归给搞忘记了，翻翻看 linux 的 rbtree 代码看看，再平衡时那一堆的 while 循环是在干嘛？不就是向父节点递归么？avl和rbtree 插入和删除的最坏情况都需要递归到根节点，都可能需要一路旋转上去，否则你设想下，假设你一直再树的最左边插入1000个新节点，每次都想再局部转两次染染色，而不去调整整棵树，不动根节点，可能么？只是说整个过程avl更加平均而已。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;结论：&lt;/p&gt;&lt;p&gt;AVL / RBTREE 真的差不多，AVL被早期各种乱七八糟的实现和数学上的“统计”给害了，别盯着 linux 用了 rbtree 就觉得 rbtree 一定好过 avl了，solaris 里面大范围的使用 avltree ，完全没有 rbtree 的痕迹那。&lt;/p&gt;&lt;p&gt;-----&lt;/p&gt;&lt;p&gt;更新：无图无真相，给一下我测试的编译器和标准库版本吧，否则疑惑我在和vc6做比较呢。&lt;/p&gt;&lt;p&gt;主要开发环境：mingw gcc 5.2.0 &lt;/p&gt;&lt;div class=\&quot;highlight\&quot;&gt;&lt;pre&gt;&lt;code class=\&quot;language-text\&quot;&gt;&lt;span&gt;&lt;/span&gt;linux rbtree with 10000000 nodes:\ninsert time: 4451ms, height=32\nsearch time: 2037ms error=0\ndelete time: 548ms\ntotal: 7036ms\n\navlmini with 10000000 nodes:\ninsert time: 4563ms, height=27\nsearch time: 2018ms error=0\ndelete time: 598ms\ntotal: 7179ms\n\nstd::map with 10000000 nodes:\ninsert time: 4281ms\nsearch time: 4124ms error=0\ndelete time: 767ms\ntotal: 9172ms\n\nlinux rbtree with 1000000 nodes:\ninsert time: 355ms, height=26\nsearch time: 171ms error=0\ndelete time: 46ms\ntotal: 572ms\n\navlmini with 1000000 nodes:\ninsert time: 438ms, height=24\nsearch time: 141ms error=0\ndelete time: 47ms\ntotal: 626ms\n\nstd::map with 1000000 nodes:\ninsert time: 345ms\nsearch time: 360ms error=0\ndelete time: 62ms\ntotal: 767ms\n&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;又测试了一下 vs2017，结论类似：&lt;/p&gt;&lt;div class=\&quot;highlight\&quot;&gt;&lt;pre&gt;&lt;code class=\&quot;language-text\&quot;&gt;&lt;span&gt;&lt;/span&gt;linux rbtree with 10000000 nodes:\ninsert time: 4201ms, height=32\nsearch time: 3411ms error=0\ndelete time: 567ms\ntotal: 8179ms\n\navlmini with 10000000 nodes:\ninsert time: 4250ms, height=27\nsearch time: 3233ms error=0\ndelete time: 658ms\ntotal: 8141ms\n\nstd::map with 10000000 nodes:\ninsert time: 4658ms\nsearch time: 4275ms error=0\ndelete time: 815ms\ntotal: 9748ms\n\nlinux rbtree with 1000000 nodes:\ninsert time: 330ms, height=26\nsearch time: 316ms error=0\ndelete time: 62ms\ntotal: 708ms\n\navlmini with 1000000 nodes:\ninsert time: 409ms, height=24\nsearch time: 266ms error=0\ndelete time: 53ms\ntotal: 728ms\n\nstd::map with 1000000 nodes:\ninsert time: 426ms\nsearch time: 375ms error=0\ndelete time: 78ms\ntotal: 879ms\n&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;注意，avlmini 和  linux rbtree 都是使用结构体内嵌的形式，这样和 std::map 这种需要 overhead 的容器比较起来 std::map 太吃亏了，所以我测试时，每次插入 avlmini 和 linux rbtree 之前都会模拟 std::map 为每对新的 (key, value) 分配一个结构体（包含node信息和 key, value），再插入，这样加入了内存分配的开销，才和 std::map 进行比较。&lt;/p&gt;&lt;p&gt;参考：别人做的更多树和哈希表的评测 &lt;a href=\&quot;https://link.zhihu.com/?target=https%3A//github.com/rcarbone/kudb\&quot; class=\&quot; wrap external\&quot; target=\&quot;_blank\&quot; rel=\&quot;nofollow noreferrer\&quot;&gt;rcarbone/kudb&lt;i class=\&quot;icon-external\&quot;&gt;&lt;/i&gt;&lt;/a&gt; &lt;/p&gt;&quot;,&quot;commentCount&quot;:41,&quot;extras&quot;:&quot;&quot;,&quot;reshipmentSettings&quot;:&quot;allowed&quot;,&quot;rewardInfo&quot;:{&quot;rewardMemberCount&quot;:0,&quot;isRewardable&quot;:false,&quot;rewardTotalMoney&quot;:0,&quot;canOpenReward&quot;:false,&quot;tagline&quot;:&quot;&quot;},&quot;isCopyable&quot;:true,&quot;type&quot;:&quot;answer&quot;,&quot;thumbnail&quot;:&quot;https://pic3.zhimg.com/v2-3b0dd24fe1bc5e5940cc405233ce1e0e_200x112.jpg&quot;,&quot;isNormal&quot;:true}},&quot;articles&quot;:{},&quot;columns&quot;:{},&quot;topics&quot;:{},&quot;roundtables&quot;:{},&quot;favlists&quot;:{},&quot;comments&quot;:{},&quot;notifications&quot;:{},&quot;ebooks&quot;:{},&quot;activities&quot;:{},&quot;feeds&quot;:{},&quot;pins&quot;:{},&quot;promotions&quot;:{}},&quot;currentUser&quot;:&quot;&quot;,&quot;token&quot;:{&quot;xsrf&quot;:&quot;634b9ffe-fae6-4abb-bada-90142c966169&quot;,&quot;xUDID&quot;:&quot;AFDCax1AwAyPTmowl7bqb9S_vN698dKwvBg=&quot;},&quot;account&quot;:{&quot;locakTicketStatus&quot;:false,&quot;challenge&quot;:[],&quot;errorStatus&quot;:false,&quot;message&quot;:&quot;&quot;,&quot;isFetching&quot;:false},&quot;notification&quot;:{},&quot;people&quot;:{&quot;isFetching&quot;:false,&quot;activitiesByUser&quot;:{},&quot;answersByUser&quot;:{},&quot;answersSortByVotesByUser&quot;:{},&quot;answersIncludedByUser&quot;:{},&quot;votedAnswersByUser&quot;:{},&quot;thankedAnswersByUser&quot;:{},&quot;voteAnswersByUser&quot;:{},&quot;thankAnswersByUser&quot;:{},&quot;topicAnswersByUser&quot;:{},&quot;articlesByUser&quot;:{},&quot;articlesSortByVotesByUser&quot;:{},&quot;articlesIncludedByUser&quot;:{},&quot;pinsByUser&quot;:{},&quot;questionsByUser&quot;:{},&quot;commercialQuestionsByUser&quot;:{},&quot;favlistsByUser&quot;:{},&quot;followingByUser&quot;:{},&quot;followersByUser&quot;:{},&quot;mutualsByUser&quot;:{},&quot;followingColumnsByUser&quot;:{},&quot;followingQuestionsByUser&quot;:{},&quot;followingFavlistsByUser&quot;:{},&quot;followingTopicsByUser&quot;:{},&quot;publicationsByUser&quot;:{},&quot;columnsByUser&quot;:{},&quot;allFavlistsByUser&quot;:{},&quot;brands&quot;:null},&quot;env&quot;:{&quot;experiment&quot;:{&quot;ge3&quot;:&quot;ge3_10&quot;,&quot;ge2&quot;:&quot;ge2_1&quot;,&quot;nwebStickySidebar&quot;:&quot;sticky&quot;,&quot;androidPassThroughPush&quot;:&quot;all&quot;,&quot;newMore&quot;:&quot;new&quot;,&quot;liveReviewBuyBar&quot;:&quot;live_review_buy_bar_2&quot;,&quot;liveStore&quot;:&quot;ls_a1_b2_c2_f1&quot;,&quot;qawebThumbnailAbtest&quot;:&quot;new&quot;,&quot;searchHybridTabs&quot;:&quot;without-tabs&quot;,&quot;showVideoUploadAttention&quot;:&quot;false&quot;,&quot;isOffice&quot;:&quot;false&quot;,&quot;liveDetailWechatBanner&quot;:&quot;Live_detail_wechat_banner_1&quot;,&quot;newLiveFeedMediacard&quot;:&quot;old&quot;,&quot;homeUi2&quot;:&quot;default&quot;,&quot;recommendationAbtest&quot;:&quot;new&quot;,&quot;marketTab&quot;:&quot;market_tab_old&quot;,&quot;qrcodeLogin&quot;:&quot;qrcode&quot;,&quot;isShowUnicomFreeEntry&quot;:&quot;unicom_free_entry_off&quot;,&quot;newMobileColumnAppheader&quot;:&quot;new_header&quot;,&quot;androidDbRecommendAction&quot;:&quot;open&quot;,&quot;zcmLighting&quot;:&quot;zcm&quot;,&quot;favAct&quot;:&quot;default&quot;,&quot;appStoreRateDialog&quot;:&quot;close&quot;,&quot;mobileQaPageProxyHeifetz&quot;:&quot;m_qa_page_nweb&quot;,&quot;default&quot;:&quot;None&quot;,&quot;wechatShareModal&quot;:&quot;wechat_share_modal_show&quot;,&quot;nwebRelatedAdvert&quot;:&quot;default&quot;,&quot;qaStickySidebar&quot;:&quot;sticky_sidebar&quot;,&quot;androidProfilePanel&quot;:&quot;panel_b&quot;,&quot;nwebWriteAnswer&quot;:&quot;experiment&quot;},&quot;userAgent&quot;:{&quot;Edge&quot;:false,&quot;Wechat&quot;:false,&quot;Weibo&quot;:false,&quot;QQ&quot;:false,&quot;Mobile&quot;:false,&quot;Android&quot;:false,&quot;iOS&quot;:false,&quot;isAppleDevice&quot;:false,&quot;Zhihu&quot;:false,&quot;ZhihuHybrid&quot;:false,&quot;isBot&quot;:false,&quot;isWebView&quot;:false},&quot;trafficSource&quot;:&quot;production&quot;,&quot;edition&quot;:{&quot;baidu&quot;:true,&quot;yidianzixun&quot;:false},&quot;theme&quot;:&quot;light&quot;,&quot;referer&quot;:&quot;https://www.baidu.com/link?url=4fyC6oZ3wSVpg1hq1DgNj-ODWCnHogdVSMLHZHETYzwfIVBN_1D3sRAqmBUHJcGVOpoxUh_vyr_onEUV7jML_a&amp;wd=&amp;eqid=8d18a3c800028e7c000000025a1cd987&quot;,&quot;conf&quot;:{&quot;unblockContacts&quot;:{&quot;mobile&quot;:&quot;1069 02098 21212&quot;,&quot;telecom&quot;:&quot;1069 0920 21212&quot;,&quot;unicom&quot;:&quot;1069 0920 21212&quot;}}},&quot;config&quot;:{&quot;isWindow&quot;:0,&quot;canWrite&quot;:false,&quot;alertTimeSpan&quot;:3600,&quot;tip&quot;:&quot;应国家法规对于帐号实名的要求，进行下一步操作前，需要先完成手机绑定。&quot;},&quot;pushNotifications&quot;:{&quot;default&quot;:{&quot;isFetching&quot;:false,&quot;isDrained&quot;:false,&quot;ids&quot;:[]},&quot;follow&quot;:{&quot;isFetching&quot;:false,&quot;isDrained&quot;:false,&quot;ids&quot;:[]},&quot;vote-thank&quot;:{&quot;isFetching&quot;:false,&quot;isDrained&quot;:false,&quot;ids&quot;:[]},&quot;currentTab&quot;:&quot;default&quot;,&quot;notificationsCount&quot;:{&quot;default&quot;:0,&quot;follow&quot;:0,&quot;vote-thank&quot;:0}},&quot;messages&quot;:{&quot;data&quot;:{},&quot;currentTab&quot;:&quot;common&quot;,&quot;messageCount&quot;:0},&quot;register&quot;:{&quot;registerValidateSucceeded&quot;:null,&quot;registerValidateErrors&quot;:{},&quot;registerConfirmError&quot;:null,&quot;sendDigitsError&quot;:null,&quot;registerConfirmSucceeded&quot;:null},&quot;login&quot;:{&quot;loginUnregisteredError&quot;:false,&quot;loginBindWechatError&quot;:false,&quot;loginConfirmError&quot;:null,&quot;sendDigitsError&quot;:null,&quot;validateDigitsError&quot;:false,&quot;loginConfirmSucceeded&quot;:null,&quot;qrcodeLoginToken&quot;:&quot;&quot;,&quot;qrcodeLoginScanStatus&quot;:0,&quot;qrcodeLoginError&quot;:null,&quot;qrcodeLoginReturnNewToken&quot;:false},&quot;active&quot;:{&quot;sendDigitsError&quot;:null,&quot;activeConfirmSucceeded&quot;:null,&quot;activeConfirmError&quot;:null},&quot;coupon&quot;:{&quot;isRedeemingCoupon&quot;:false},&quot;question&quot;:{&quot;followers&quot;:{},&quot;concernedFollowers&quot;:{},&quot;answers&quot;:{&quot;30527705&quot;:{&quot;isFetching&quot;:false,&quot;isDrained&quot;:false,&quot;ids&quot;:[52527887,52750388,259948086],&quot;newIds&quot;:[52527887,52750388,259948086],&quot;totals&quot;:25,&quot;isPrevDrained&quot;:true,&quot;previous&quot;:&quot;http://www.zhihu.com/api/v4/questions/30527705/answers?sort_by=default&amp;include=data%5B%2A%5D.is_normal%2Cadmin_closed_comment%2Creward_info%2Cis_collapsed%2Cannotation_action%2Cannotation_detail%2Ccollapse_reason%2Cis_sticky%2Ccollapsed_by%2Csuggest_edit%2Ccomment_count%2Ccan_comment%2Ccontent%2Ceditable_content%2Cvoteup_count%2Creshipment_settings%2Ccomment_permission%2Ccreated_time%2Cupdated_time%2Creview_info%2Cquestion%2Cexcerpt%2Crelationship.is_authorized%2Cis_author%2Cvoting%2Cis_thanked%2Cis_nothelp%2Cupvoted_followees%3Bdata%5B%2A%5D.mark_infos%5B%2A%5D.url%3Bdata%5B%2A%5D.author.follower_count%2Cbadge%5B%3F%28type%3Dbest_answerer%29%5D.topics&amp;limit=3&amp;offset=0&quot;,&quot;next&quot;:&quot;http://www.zhihu.com/api/v4/questions/30527705/answers?sort_by=default&amp;include=data%5B%2A%5D.is_normal%2Cadmin_closed_comment%2Creward_info%2Cis_collapsed%2Cannotation_action%2Cannotation_detail%2Ccollapse_reason%2Cis_sticky%2Ccollapsed_by%2Csuggest_edit%2Ccomment_count%2Ccan_comment%2Ccontent%2Ceditable_content%2Cvoteup_count%2Creshipment_settings%2Ccomment_permission%2Ccreated_time%2Cupdated_time%2Creview_info%2Cquestion%2Cexcerpt%2Crelationship.is_authorized%2Cis_author%2Cvoting%2Cis_thanked%2Cis_nothelp%2Cupvoted_followees%3Bdata%5B%2A%5D.mark_infos%5B%2A%5D.url%3Bdata%5B%2A%5D.author.follower_count%2Cbadge%5B%3F%28type%3Dbest_answerer%29%5D.topics&amp;limit=3&amp;offset=3&quot;}},&quot;hiddenAnswers&quot;:{},&quot;createdAnswers&quot;:{},&quot;collapsedAnswers&quot;:{},&quot;notificationAnswers&quot;:{},&quot;invitationCandidates&quot;:{},&quot;inviters&quot;:{},&quot;invitees&quot;:{},&quot;similarQuestions&quot;:{},&quot;relatedLives&quot;:{},&quot;recommendReadings&quot;:{},&quot;bio&quot;:{},&quot;brand&quot;:{},&quot;commonAnswerCount&quot;:0,&quot;hiddenAnswerCount&quot;:0},&quot;comments&quot;:{&quot;pagination&quot;:{},&quot;collapsed&quot;:{},&quot;reverse&quot;:{},&quot;reviewing&quot;:{},&quot;conversation&quot;:{},&quot;parent&quot;:{}},&quot;shareTexts&quot;:{},&quot;answers&quot;:{&quot;voters&quot;:{},&quot;copyrightApplicants&quot;:{},&quot;favlists&quot;:{},&quot;newAnswer&quot;:{}},&quot;banner&quot;:{},&quot;topic&quot;:{&quot;bios&quot;:{},&quot;hot&quot;:{},&quot;top&quot;:{},&quot;wait&quot;:{},&quot;parent&quot;:{},&quot;children&quot;:{},&quot;bestAnswerers&quot;:{},&quot;index&quot;:{},&quot;intro&quot;:{}},&quot;captcha&quot;:{&quot;captchaNeeded&quot;:false,&quot;captchaValidated&quot;:false,&quot;captchaBase64String&quot;:null,&quot;captchaValidationMessage&quot;:null,&quot;loginCaptchaExpires&quot;:false},&quot;sms&quot;:{&quot;supportedCountries&quot;:[]},&quot;explore&quot;:{&quot;recommendations&quot;:{},&quot;hotfeeds&quot;:{}},&quot;articles&quot;:{&quot;voters&quot;:{}},&quot;favlists&quot;:{&quot;relations&quot;:{}},&quot;pins&quot;:{&quot;voters&quot;:{}},&quot;topstory&quot;:{&quot;topstorys&quot;:{&quot;isFetching&quot;:false,&quot;isDrained&quot;:false,&quot;afterId&quot;:0,&quot;items&quot;:[],&quot;next&quot;:null},&quot;sidebar&quot;:null,&quot;announcement&quot;:{}},&quot;upload&quot;:{},&quot;video&quot;:{&quot;data&quot;:{}},&quot;guide&quot;:{&quot;guide&quot;:{&quot;isFetching&quot;:false,&quot;isShowGuide&quot;:false}},&quot;switches&quot;:{},&quot;reward&quot;:{},&quot;search&quot;:{&quot;recommendSearch&quot;:[],&quot;topSearch&quot;:{},&quot;generalByQuery&quot;:{},&quot;generalByQueryInADay&quot;:{},&quot;generalByQueryInAWeek&quot;:{},&quot;generalByQueryInThreeMonths&quot;:{},&quot;peopleByQuery&quot;:{},&quot;topicByQuery&quot;:{},&quot;columnByQuery&quot;:{},&quot;liveByQuery&quot;:{},&quot;eBookByQuery&quot;:{}}}" data-config="{&quot;apiAddress&quot;:&quot;/api/v4/&quot;,&quot;deployEnv&quot;:&quot;production&quot;}"></div><script src="https://static.zhihu.com/heifetz/vendor.72d10fe31301a0517a94.js"></script><script src="https://static.zhihu.com/heifetz/main.raven.579e625a2adaf24e2a85.js" async=""></script><script src="https://static.zhihu.com/heifetz/main.app.f23373fb7af0c773d703.js"></script><script></script></body></html>