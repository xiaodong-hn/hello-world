<!DOCTYPE html>
<html>
  <head>
    <link rel="canonical" href="http://blog.csdn.net/benpaobagzb/article/details/50805711"/> 
    <script type="text/javascript">
        var username = "benpaobagzb";
        var _blogger = username;
        var blog_address = "http://blog.csdn.net/benpaobagzb";
        var static_host = "http://s.csdnimg.cn/static/";
        var currentUserName = ""; 
        var fileName = '50805711';
        var commentscount = 0;
        var islock = false
        window.quickReplyflag = true;
        var totalFloor = 0;
        var isBole = false;
        var isDigg = false;
        var isExpert=false;
        var isAdm = false;
    </script>
    <meta http-equiv="content-type" content="text/html; charset=utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=Edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, user-scalable=no">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <script src="http://c.csdnimg.cn/public/common/libs/jquery/jquery-1.9.1.min.js" type="text/javascript"></script>
    <link rel="stylesheet" href="http://c.csdnimg.cn/public/common/libs/bootstrap/css/bootstrap.min.css">
    <link rel="stylesheet" href="http://c.csdnimg.cn/public/static/css/avatar.css">
    <link type="text/css" rel="stylesheet" href="http://s.csdnimg.cn/static/scripts/SyntaxHighlighter/styles/default.css?v=20171124144713" />
    <link rel="stylesheet" href="http://s.csdnimg.cn/static/css/style.css?v=20171124144713">
    <link rel="stylesheet" href="http://c.csdnimg.cn/public/common/toolbar/content_toolbar_css/content_toolbar.css">

    <script type="text/javascript" src="http://s.csdnimg.cn/static/fonts/iconfont.js"></script>
    <script src="http://csdnimg.cn/rabbit/exposure-click/main.js?v1.15.23"></script>
    <script type="text/javascript" src="http://c.csdnimg.cn/pubfooter/js/tracking_for_recommend.js?v=0911" charset="utf-8"></script>
    <script type="text/javascript" src="http://csdnimg.cn/pubfooter/js/tracking.js" charset="utf-8"></script>
    <script type="text/javascript" src="http://s.csdnimg.cn/static//js/cnick.js" charset="utf-8"></script>
    <link rel="stylesheet" href="http://s.csdnimg.cn/static/code/prettify.css" />
    <script type="text/javascript" src="http://s.csdnimg.cn/static/code/prettify.js"></script>
    <script src="http://dup.baidustatic.com/js/ds.js"></script>
    <script type="text/javascript">
        // Traffic Stats of the entire Web site By baidu
        var _hmt = _hmt || [];
        (function() {
            var hm = document.createElement("script");
            hm.src = "https://hm.baidu.com/hm.js?6bcd52f51e9b3dce32bec4a3997715ac";
            var s = document.getElementsByTagName("script")[0];
            s.parentNode.insertBefore(hm, s);
        })();
        // Traffic Stats of the entire Web site By baidu end
    </script>
    <meta name="description" content="红黑树和B树应用场景有何不同？
2者都是有序数据结构，可用作数据容器。
红黑树多用在内部排序，即全放在内存中的，微软STL的map和set的内部实现就是红黑树。
B树多用在内存里放不下，大部分数据存储在外存上时。因为B树层数少，因此可以确保每次操作，读取磁盘的次数尽可能的少。

在数据较小，可以完全放到内存中时，红黑树的时间复杂度比B树低。
反之，数据量较大，外存中占主要部分时，B树因" />
    <meta name="keywords" content="" />
    <meta http-equiv="Cache-Control" content="no-siteapp" /><link rel="alternate" media="handheld" href="#" />
    <meta name="shenma-site-verification" content="5a59773ab8077d4a62bf469ab966a63b_1497598848">
    
    <script src="http://s.csdnimg.cn/static/js/public/switchHome.js?v=20171124144713"></script>
    <title>红黑树和B树应用场景总结 - CSDN博客</title>
    <link href="http://csdnimg.cn/public/favicon.ico" rel="SHORTCUT ICON">
</head>
<body>
<script id="toolbar-tpl-scriptId" prod="download" skin="black" src="http://c.csdnimg.cn/public/common/toolbar/js/content_toolbar.js" type="text/javascript" domain="http://blog.csdn.net/"></script>
<div class="container clearfix">
  <main>
    <article>
        <h1 class="csdn_top">红黑树和B树应用场景总结</h1>
        <div class="article_bar clearfix">
            <div class="artical_tag">
                <span class="original">
                原创                </span>
                <span class="time">2016年03月04日 21:50:40</span>
            </div>

            <ul class="article_tags clearfix csdn-tracking-statistics" data-mod="popu_377">
                <li class="tit">标签：</li>

<!--          [startarticletags]-->
                <!--          [endarticletags]-->
            </ul>
            <ul class="right_bar">
                <li><button class="btn-noborder"><i class="icon iconfont icon-read"></i><span class="txt">4586</span></button></li>
<!--                <li><button class="btn-noborder but-comment-topicon"><i class="icon iconfont icon-pinglun"></i><span class="txt">--><!--</span></button></li>-->
<!--                <li><button class="btn-noborder btn-like"><i  class="icon iconfont icon-xihuan-"></i><span class="txt">--><!--</span></button></li>-->
                <li class="edit">
                    <a class="btn-noborder" href="" >
                        <i class="icon iconfont icon-bianji"></i><span class="txt">编辑</span>
                    </a>
                </li>
                <li class="del">
                    <a class="btn-noborder" onclick="javascript:deleteArticle(fileName);return false;">
                        <i class="icon iconfont icon-shanchu"></i><span class="txt">删除</span>
                    </a>
                </li>
            </ul>
        </div>
        <div id="article_content" class="article_content csdn-tracking-statistics" data-mod="popu_519" data-dsm="post">
                        
<p><span style="color:rgb(255,0,0)">红黑树和B树应用场景有何不同？</span></p>
<p><span style="color:#ff0000"><span style="font-family:Helvetica,Tahoma,Arial,sans-serif; font-size:14px; line-height:24px; background-color:rgb(245,245,245)">2者都是有序数据结构，可用作数据容器。</span><br style="font-family:Helvetica,Tahoma,Arial,sans-serif; font-size:14px; line-height:24px; background-color:rgb(245,245,245)">
<span style="font-family:Helvetica,Tahoma,Arial,sans-serif; font-size:14px; line-height:24px; background-color:rgb(245,245,245)">红黑树多用在内部排序，即全放在内存中的，微软STL的map和set的内部实现就是红黑树。</span><br style="font-family:Helvetica,Tahoma,Arial,sans-serif; font-size:14px; line-height:24px; background-color:rgb(245,245,245)">
<span style="font-family:Helvetica,Tahoma,Arial,sans-serif; font-size:14px; line-height:24px; background-color:rgb(245,245,245)">B树多用在内存里放不下，大部分数据存储在外存上时。因为B树层数少，因此可以确保每次操作，读取磁盘的次数尽可能的少。</span><br>
</span></p>
<p><span style="font-family:Helvetica,Tahoma,Arial,sans-serif; font-size:14px; line-height:24px; background-color:rgb(245,245,245)"><span style="color:#ff0000"><span style="font-family:Helvetica,Tahoma,Arial,sans-serif; font-size:14px; line-height:24px; background-color:rgb(245,245,245)">在数据较小，可以完全放到内存中时，红黑树的时间复杂度比B树低。</span><br style="font-family:Helvetica,Tahoma,Arial,sans-serif; font-size:14px; line-height:24px; background-color:rgb(245,245,245)">
<span style="font-family:Helvetica,Tahoma,Arial,sans-serif; font-size:14px; line-height:24px; background-color:rgb(245,245,245)">反之，数据量较大，外存中占主要部分时，B树因其读磁盘次数少，而具有更快的速度。</span></span><br>
</span></p>
<p><span style="font-family:Helvetica,Tahoma,Arial,sans-serif; font-size:14px; line-height:24px; background-color:rgb(245,245,245)"><span style="color:#ff0000"><span style="font-family:Helvetica,Tahoma,Arial,sans-serif; font-size:14px; line-height:24px; background-color:rgb(245,245,245)"><br>
</span></span></span></p>
<p><span style="font-family:Helvetica,Tahoma,Arial,sans-serif; font-size:14px; line-height:24px; background-color:rgb(245,245,245)"><span style="color:#ff0000"><span style="font-family:Helvetica,Tahoma,Arial,sans-serif; font-size:14px; line-height:24px; background-color:rgb(245,245,245)">红黑树，B树，B&#43;树，B-树
 理解<br>
<br>
红黑树rbtree 二叉排序树<br>
map 就是采用红黑树存储的，红黑树(RB Tree)是平衡二叉树，其优点就是树到叶子节点深度一致，查找的效率也就一样，为logN.在实行查找，插入，删除的效率都一致，而当是全部静态数据时，没有太多优势，可能采用hash表各合适。<br>
hash_map是一个hash table占用内存更多，查找效率高一些，但是hash的时间比较费时。<br>
总 体来说，hash_map 查找速度会比map快，而且查找速度基本和数据数据量大小，属于常数级别;而map的查找速度是log(n)级别。并不一定常数就比log(n)小， hash还有hash函数的耗时，明白了吧，如果你考虑效率，特别是在元素达到一定数量级时，考虑考虑hash_map。但若你对内存使用特别严&#26684;，希望程序尽可能少消耗内存，那么一定要小心，hash_map可能会让你陷入尴尬，特别是当你的hash_map对象特别多时，你就更无法控制了，而且 hash_map的构造速度较慢。<br>
现在知道如何选择了吗？权衡三个因素: 查找速度, 数据量, 内存使用。<br>
trie树Double Array 字典查找树<br>
Trie树既可用于一般的字典搜索，也可用于索引查找。<br>
每个节点相当于DFA的一个状态，终止状态为查找结束。有序查找的过程相当于状态的不断转换<br>
对于给定的一个字符串a1,a2,a3,...,an.则<br>
采用TRIE树搜索经过n次搜索即可完成一次查找。不过好像还是没有B树的搜索效率高，B树搜索算法复杂度为logt(n&#43;1/2).当t趋向大，搜索效率变得高效。怪不得DB2的访问内存设置为虚拟内存的一个PAGE大小，而且帧切换频率降低，无需经常的PAGE切换。<br>
<br>
B树<br>
&nbsp; &nbsp; &nbsp; &nbsp;即二叉搜索树：<br>
&nbsp; &nbsp; &nbsp; &nbsp;1.所有非叶子结点至多拥有两个儿子（Left和Right）；<br>
&nbsp; &nbsp; &nbsp; &nbsp;2.所有结点存储一个关键字；<br>
&nbsp; &nbsp; &nbsp; &nbsp;3.非叶子结点的左指针指向小于其关键字的子树，右指针指向大于其关键字的子树；<br>
&nbsp; &nbsp; &nbsp; &nbsp;如：<br>
&nbsp; &nbsp; &nbsp; &nbsp;B树的搜索，从根结点开始，如果查询的关键字与结点的关键字相等，那么就命中；否则，如果查询关键字比结点关键字小，就进入左儿子；如果比结点关键字大，就进入右儿子；如果左儿子或右儿子的指针为空，则报告找不到相应的关键字；<br>
&nbsp; &nbsp; &nbsp; &nbsp;如果B树的所有非叶子结点的左右子树的结点数目均保持差不多（平衡），那么B树的搜索性能&#36924;近二分查找；但它比连续内存空间的二分查找的优点是，改变B树结构（插入与删除结点）不需要移动大段的内存数据，甚至通常是常数开销；<br>
&nbsp; &nbsp; &nbsp; &nbsp;如：<br>
&nbsp; &nbsp; 但B树在经过多次插入与删除后，有可能导致不同的结构：<br>
&nbsp; &nbsp;右边也是一个B树，但它的搜索性能已经是线性的了；同样的关键字集合有可能导致不同的树结构索引；所以，使用B树还要考虑尽可能让B树保持左图的结构，和避免右图的结构，也就是所谓的“平衡”问题； &nbsp; &nbsp; &nbsp;<br>
&nbsp; &nbsp; &nbsp; &nbsp;实际使用的B树都是在原B树的基础上加上平衡算法，即“平衡二叉树”；如何保持B树结点分布均匀的平衡算法是平衡二叉树的关键；平衡算法是一种在B树中插入和删除结点的策略；<br>
B-树<br>
&nbsp; &nbsp; &nbsp; &nbsp;是一种多路搜索树（并不是二叉的）：<br>
&nbsp; &nbsp; &nbsp; &nbsp;1.定义任意非叶子结点最多只有M个儿子；且M&gt;2；<br>
&nbsp; &nbsp; &nbsp; &nbsp;2.根结点的儿子数为[2, M]；<br>
&nbsp; &nbsp; &nbsp; &nbsp;3.除根结点以外的非叶子结点的儿子数为[M/2, M]；<br>
&nbsp; &nbsp; &nbsp; &nbsp;4.每个结点存放至少M/2-1（取上整）和至多M-1个关键字；（至少2个关键字）<br>
&nbsp; &nbsp; &nbsp; &nbsp;5.非叶子结点的关键字个数=指向儿子的指针个数-1；<br>
&nbsp; &nbsp; &nbsp; &nbsp;6.非叶子结点的关键字：K[1], K[2], …, K[M-1]；且K[i] &lt; K[i&#43;1]；<br>
&nbsp; &nbsp; &nbsp; &nbsp;7.非叶子结点的指针：P[1], P[2], …, P[M]；其中P[1]指向关键字小于K[1]的子树，P[M]指向关键字大于K[M-1]的子树，其它P[i]指向关键字属于(K[i-1], K[i])的子树；<br>
&nbsp; &nbsp; &nbsp; &nbsp;8.所有叶子结点位于同一层；<br>
&nbsp; &nbsp; &nbsp; &nbsp;如：（M=3）<br>
&nbsp; &nbsp; &nbsp; &nbsp;B-树的搜索，从根结点开始，对结点内的关键字（有序）序列进行二分查找，如果命中则结束，否则进入查询关键字所属范围的儿子结点；重复，直到所对应的儿子指针为空，或已经是叶子结点；<br>
B-树的特性：<br>
&nbsp; &nbsp; &nbsp; &nbsp;1.关键字集合分布在整颗树中；<br>
&nbsp; &nbsp; &nbsp; &nbsp;2.任何一个关键字出现且只出现在一个结点中；<br>
&nbsp; &nbsp; &nbsp; &nbsp;3.搜索有可能在非叶子结点结束；<br>
&nbsp; &nbsp; &nbsp; &nbsp;4.其搜索性能等价于在关键字全集内做一次二分查找；<br>
&nbsp; &nbsp; &nbsp; &nbsp;5.自动层次控制；<br>
&nbsp; &nbsp; &nbsp; &nbsp;由于限制了除根结点以外的非叶子结点，至少含有M/2个儿子，确保了结点的至少利用率，其最底搜索性能为：<br>
&nbsp; &nbsp; &nbsp; &nbsp;其中，M为设定的非叶子结点最多子树个数，N为关键字总数；<br>
&nbsp; &nbsp; &nbsp; &nbsp;所以B-树的性能总是等价于二分查找（与M&#20540;无关），也就没有B树平衡的问题；<br>
&nbsp; &nbsp; &nbsp; &nbsp;由于M/2的限制，在插入结点时，如果结点已满，需要将结点分裂为两个各占M/2的结点；删除结点时，需将两个不足M/2的兄弟结点合并；<br>
B&#43;树<br>
&nbsp; &nbsp; &nbsp; &nbsp;B&#43;树是B-树的变体，也是一种多路搜索树：<br>
&nbsp; &nbsp; &nbsp; &nbsp;1.其定义基本与B-树同，除了：<br>
&nbsp; &nbsp; &nbsp; &nbsp;2.非叶子结点的子树指针与关键字个数相同；<br>
&nbsp; &nbsp; &nbsp; &nbsp;3.非叶子结点的子树指针P[i]，指向关键字&#20540;属于[K[i], K[i&#43;1])的子树（B-树是开区间）；<br>
&nbsp; &nbsp; &nbsp; &nbsp;5.为所有叶子结点增加一个链指针；<br>
&nbsp; &nbsp; &nbsp; &nbsp;6.所有关键字都在叶子结点出现；<br>
&nbsp; &nbsp; &nbsp; &nbsp;如：（M=3）<br>
&nbsp; &nbsp;B&#43;的搜索与B-树也基本相同，区别是B&#43;树只有达到叶子结点才命中（B-树可以在非叶子结点命中），其性能也等价于在关键字全集做一次二分查找；<br>
&nbsp; &nbsp; &nbsp; &nbsp;B&#43;的特性：<br>
&nbsp; &nbsp; &nbsp; &nbsp;1.所有关键字都出现在叶子结点的链表中（稠密索引），且链表中的关键字恰好是有序的；<br>
&nbsp; &nbsp; &nbsp; &nbsp;2.不可能在非叶子结点命中；<br>
&nbsp; &nbsp; &nbsp; &nbsp;3.非叶子结点相当于是叶子结点的索引（稀疏索引），叶子结点相当于是存储（关键字）数据的数据层；<br>
&nbsp; &nbsp; &nbsp; &nbsp;4.更适合文件索引系统；<br>
B*树<br>
&nbsp; &nbsp; &nbsp; &nbsp;是B&#43;树的变体，在B&#43;树的非根和非叶子结点再增加指向兄弟的指针；<br>
&nbsp; &nbsp;B*树定义了非叶子结点关键字个数至少为(2/3)*M，即块的最低使用率为2/3（代替B&#43;树的1/2）；<br>
&nbsp; &nbsp; &nbsp; &nbsp;B&#43;树的分裂：当一个结点满时，分配一个新的结点，并将原结点中1/2的数据复制到新结点，最后在父结点中增加新结点的指针；B&#43;树的分裂只影响原结点和父结点，而不会影响兄弟结点，所以它不需要指向兄弟的指针；<br>
&nbsp; &nbsp; &nbsp; &nbsp;B*树的分裂：当一个结点满时，如果它的下一个兄弟结点未满，那么将一部分数据移到兄弟结点中，再在原结点插入关键字，最后修改父结点中兄弟结点的关键字（因为兄弟结点的关键字范围改变了）；如果兄弟也满了，则在原结点与兄弟结点之间增加新结点，并各复制1/3的数据到新结点，最后在父结点增加新结点的指针；<br>
&nbsp; &nbsp; &nbsp; &nbsp;所以，B*树分配新结点的概率比B&#43;树要低，空间使用率更高；<br>
小结<br>
&nbsp; &nbsp; &nbsp; &nbsp;B树：二叉树，每个结点只存储一个关键字，等于则命中，小于走左结点，大于走右结点；<br>
&nbsp; &nbsp; &nbsp; &nbsp;B-树：多路搜索树，每个结点存储M/2到M个关键字，非叶子结点存储指向关键字范围的子结点；<br>
&nbsp; &nbsp; &nbsp; &nbsp;所有关键字在整颗树中出现，且只出现一次，非叶子结点可以命中；<br>
&nbsp; &nbsp; &nbsp; &nbsp;B&#43;树：在B-树基础上，为叶子结点增加链表指针，所有关键字都在叶子结点中出现，非叶子结点作为叶子结点的索引；B&#43;树总是到叶子结点才命中；<br>
&nbsp; &nbsp; &nbsp; &nbsp;B*树：在B&#43;树基础上，为非叶子结点也增加链表指针，将结点的最低利用率从1/2提高到2/3；<br>
</span></span></span></p>
<p><span style="font-family:Helvetica,Tahoma,Arial,sans-serif; font-size:14px; line-height:24px; background-color:rgb(245,245,245)"><span style="color:#ff0000"><span style="font-family:Helvetica,Tahoma,Arial,sans-serif; font-size:14px; line-height:24px; background-color:rgb(245,245,245)"><br>
</span></span></span></p>
<p><span style="font-family:Helvetica,Tahoma,Arial,sans-serif; font-size:14px; line-height:24px; background-color:rgb(245,245,245)"><span style="color:#ff0000"><span style="font-family:Helvetica,Tahoma,Arial,sans-serif; font-size:14px; line-height:24px; background-color:rgb(245,245,245)"></span></span></span></p>
<p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; font-family:Arial; font-size:14px; line-height:26px">
B树是为了提高磁盘或外部存储设备查找效率而产生的一种多路平衡查找树。</p>
<p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; font-family:Arial; font-size:14px; line-height:26px">
B&#43;树为B树的变形结构，用于大多数数据库或文件系统的存储而设计。</p>
<p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; font-family:Arial; font-size:14px; line-height:26px">
<br>
</p>
<p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; font-family:Arial; font-size:14px; line-height:26px">
B树相对于红黑树的区别</p>
<p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; font-family:Arial; font-size:14px; line-height:26px">
在大规模数据存储的时候，红黑树往往出现由于树的深度过大而造成磁盘IO读写过于频繁，进而导致效率低下的情况。为什么会出现这样的情况，我们知道要获取磁盘上数据，必须先通过磁盘移动臂移动到数据所在的柱面，然后找到指定盘面，接着旋转盘面找到数据所在的磁道，最后对数据进行读写。磁盘IO代价主要花费在查找所需的柱面上，树的深度过大会造成磁盘IO频繁读写。<span style="color:rgb(51,51,51); text-indent:28px">根据磁盘查找存取的次数往往由树的高度所决定，所以，只要我们通过某种较好的树结构减少树的结构尽量减少树的高度，</span>B树可以有多个子女，从几十到上千，可以降低树的高度。</p>
<p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; font-family:Arial; font-size:14px; line-height:26px">
<br>
</p>
<p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; font-family:Arial; font-size:14px; line-height:26px">
B树和B&#43;树的区别</p>
<p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; font-family:Arial; font-size:14px; line-height:26px">
B树所有叶子结点都出现在同一层，叶子结点不包含任何关键字信息。<br>
</p>
<p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; font-family:Arial; font-size:14px; line-height:26px">
B&#43;树<span style="font-family:微软雅黑; text-indent:28px">所有的叶子结点中包含了全部关键字的信息，及指向含有这些关键字记录的指针，且叶子结点本身依关键字的大小自小而大的顺序链接，<span style="color:rgb(51,51,51)">所有的非终端结点可以看成是索引部分</span>，结点中仅含有其子树根结点中最大（或最小）关键字。<span style="font-family:Arial">&nbsp;(而B 树</span>的非终节点也包含需要查找的有效信息<span style="font-family:Arial">)</span></span></p>
<p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; font-family:Arial; font-size:14px; line-height:26px">
<span style="text-indent:28px; font-size:12px; color:rgb(51,51,51)">为什么说</span><span style="color:rgb(51,102,153); text-indent:28px; font-size:12px"><strong>B&#43;比</strong></span><span style="color:rgb(51,51,51); text-indent:28px; font-size:12px">B树更适合实际应用中操作系统的文件索引和数据库索引？</span></p>
<p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; font-family:Arial; font-size:14px; line-height:26px">
<span style="font-family:微软雅黑; text-indent:28px"><span style="font-family:Arial"></span></span></p>
<p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; font-family:Arial; font-size:14px; line-height:26px; color:rgb(51,51,51)">
<span style="color:black">1)&nbsp;B<sup>&#43;</sup></span><span style="color:black">的磁盘读写代价更低</span></p>
<p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; font-family:Arial; font-size:14px; line-height:26px">
<span style="color:rgb(51,102,153)"><strong>B&#43;的</strong></span>内部结点并没有指向关键字具体信息的指针。因此其内部结点相对B树更小。如果把所有同一内部结点的关键字存放在同一盘块中，那么盘块所能容纳的关键字数量也越多。一次性读入内存中的需要查找的关键字也就越多。相对来说IO读写次数也就降低了。</p>
<p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; font-family:Arial; font-size:14px; line-height:26px; color:rgb(51,51,51)">
<span style="color:black">2)&nbsp;B<sup>&#43;</sup>-tree</span><span style="color:black">的查询效率更加稳定</span></p>
<p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; font-family:Arial; font-size:14px; line-height:26px; color:rgb(51,51,51)">
<span style="color:black">由于非终结点并不是最终指向文件内容的结点，而只是叶子结点中关键字的索引。所以任何关键字的查找必须走一条从根结点到叶子结点的路。所有关键字查询的路径长度相同，导致每一个数据的查询效率相当。</span></p>
<p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; font-family:Arial; font-size:14px; line-height:26px; color:rgb(51,51,51)">
<span style="font-size:12px">数据库索引采用B&#43;树的主要原因是 B树在提高了磁盘IO性能的同时并没有解决元素遍历的效率低下的问题。正是为了解决这个问题，B&#43;树应运而生。B&#43;树只要遍历叶子节点就可以实现整棵树的遍历。而且在数据库中基于范围的查询是非常频繁的，而B树不支持这样的操作（或者说效率太低）</span></p>
<div><span style="font-size:12px"><br>
</span></div>
<br>
<p><span style="font-family:Helvetica,Tahoma,Arial,sans-serif; font-size:14px; line-height:24px; background-color:rgb(245,245,245)"><span style="color:#ff0000"><span style="font-family:Helvetica,Tahoma,Arial,sans-serif; font-size:14px; line-height:24px; background-color:rgb(245,245,245)"><br>
</span></span></span></p>
                    </div>
    </article>
      <div class="readall_box csdn-tracking-statistics" data-mod="popu_376">
          <div class="read_more_mask"></div>
          <a class="btn btn-large btn-gray-fred read_more_btn" target="_self">阅读全文</a>
      </div>
      <div class="article_copyright">
              </div>
      <ul class="article_collect clearfix csdn-tracking-statistics"  data-mod="popu_378">
          <li class="tit">本文已收录于以下专栏：</li>
<!--          [startarticlecolumns]-->
                                <!--          [endarticlecolumns]-->
      </ul>
      <div class="comment_box clearfix">
          <div id="comment_form">
              <div id="commentsbmitarear">
                              </div>
          </div>
      </div>
      <div class="comment_li_outbox">
          <div id="comment_list"></div>
      </div>

      <div class="more_comment">
          <div id="comment_bar" class="trackgin-ad" data-mod="popu_385"></div>
      </div>

      <h3 class="recommend_tit">相关文章推荐</h3>
      <div class="recommend_list clearfix" id="rasss">
                                                                                      <dl class="clearfix csdn-tracking-statistics" data-mod="popu_387" data-poputype="feed"  data-feed-show="false"  data-dsm="post">
                      <dd>
                          <h2><a href="http://blog.csdn.net/huruzun/article/details/24869543"  target="_blank" strategy="BlogCommendFromBaidu_0">红黑树的实现与应用</a></h2>
                          <div class="summary">
                              正如 
http://blog.csdn.net/huruzun/article/details/24634593                          </div>
                          <ul>
                              <li class="avatar_img"><a href="http://blog.csdn.net/huruzun" target="_blank" strategy="BlogCommendFromBaidu_0"><img src="http://avatar.csdn.net/E/C/E/3_huruzun.jpg" alt="huruzun" title="huruzun"></a></li>
                              <li class="user_name"><a href="http://blog.csdn.net/huruzun">huruzun</a></li>
                              <li class="time">2014年05月02日 11:30</li>
                              <li class="visited_num"><i class="icon iconfont icon-read"></i><span>3561</span></li>
                          </ul>
                      </dd>
                  </dl>
                                                                                                    <dl class="clearfix csdn-tracking-statistics" data-mod="popu_387" data-poputype="feed"  data-feed-show="false"  data-dsm="post">
                      <dd>
                          <h2><a href="http://blog.csdn.net/yxc135/article/details/7939671"  target="_blank" strategy="BlogCommendFromBaidu_1">红黑树的优点</a></h2>
                          <div class="summary">
                              //转自wangyu：


红黑树是一种很有意思的平衡检索树。它的统计性能要好于平衡二叉树(有些书籍根据作者姓名，Adelson-Velskii和Landis，将其称为AVL-树)，因此，红黑树...                          </div>
                          <ul>
                              <li class="avatar_img"><a href="http://blog.csdn.net/yxc135" target="_blank" strategy="BlogCommendFromBaidu_1"><img src="http://avatar.csdn.net/8/A/A/3_yxc135.jpg" alt="yxc135" title="yxc135"></a></li>
                              <li class="user_name"><a href="http://blog.csdn.net/yxc135">yxc135</a></li>
                              <li class="time">2012年09月03日 21:13</li>
                              <li class="visited_num"><i class="icon iconfont icon-read"></i><span>18510</span></li>
                          </ul>
                      </dd>
                  </dl>
                                                                                      <script>
                      (function() {
                          var s = "_" + Math.random().toString(36).slice(2);
                          document.write('<div id="' + s + '"></div>');
                          (window.slotbydup=window.slotbydup || []).push({
                              id: '4765209',
                              container: s,
                              size: '808,120',
                              display: 'inlay-fix'
                          });
                      })();
                  </script>
                                                                <dl class="clearfix csdn-tracking-statistics" data-mod="popu_387" data-poputype="feed"  data-feed-show="false"  data-dsm="post">
                      <dd>
                          <h2><a href="http://blog.csdn.net/npy_lp/article/details/7420689"  target="_blank" strategy="BlogCommendFromBaidu_2">详解Linux内核红黑树算法的实现</a></h2>
                          <div class="summary">
                              开发平台：Ubuntu11.04
    内核源码：linux-2.6.38.8.tar.bz2
 
    关于二叉查找树的概念请参考博文《详解二叉查找树算法的实现》。
    平衡二叉树（...                          </div>
                          <ul>
                              <li class="avatar_img"><a href="http://blog.csdn.net/npy_lp" target="_blank" strategy="BlogCommendFromBaidu_2"><img src="http://avatar.csdn.net/5/3/D/3_npy_lp.jpg" alt="npy_lp" title="npy_lp"></a></li>
                              <li class="user_name"><a href="http://blog.csdn.net/npy_lp">npy_lp</a></li>
                              <li class="time">2012年04月11日 17:02</li>
                              <li class="visited_num"><i class="icon iconfont icon-read"></i><span>24747</span></li>
                          </ul>
                      </dd>
                  </dl>
                                                                                                    <dl class="clearfix csdn-tracking-statistics" data-mod="popu_387" data-poputype="feed"  data-feed-show="false"  data-dsm="post">
                      <dd>
                          <h2><a href="http://blog.csdn.net/21aspnet/article/details/8234982"  target="_blank" strategy="BlogCommendFromBaidu_3">红黑树</a></h2>
                          <div class="summary">
                              1.	简介红黑树是一种自平衡二叉查找树。它的统计性能要好于平衡二叉树（AVL树），因此，红黑树在很多地方都有应用。在C++ STL中，很多部分(目前包括set, multiset, map, mult...                          </div>
                          <ul>
                              <li class="avatar_img"><a href="http://blog.csdn.net/21aspnet" target="_blank" strategy="BlogCommendFromBaidu_3"><img src="http://avatar.csdn.net/D/3/E/3_21aspnet.jpg" alt="21aspnet" title="21aspnet"></a></li>
                              <li class="user_name"><a href="http://blog.csdn.net/21aspnet">21aspnet</a></li>
                              <li class="time">2012年11月28日 16:08</li>
                              <li class="visited_num"><i class="icon iconfont icon-read"></i><span>10617</span></li>
                          </ul>
                      </dd>
                  </dl>
                                                                                                    <dl class="clearfix csdn-tracking-statistics" data-mod="popu_387" data-poputype="feed"  data-feed-show="false"  data-dsm="post">
                      <dd>
                          <h2><a href="http://blog.csdn.net/hotdust/article/details/73087962"  target="_blank" strategy="BlogCommendFromBaidu_4">红黑树和B树应用场景总结</a></h2>
                          <div class="summary">
                              from: http://blog.csdn.net/benpaobagzb/article/details/50805711


红黑树和B树应用场景有何不同？
2者都是有序数据结构，可用作...                          </div>
                          <ul>
                              <li class="avatar_img"><a href="http://blog.csdn.net/hotdust" target="_blank" strategy="BlogCommendFromBaidu_4"><img src="http://avatar.csdn.net/3/E/7/3_hotdust.jpg" alt="hotdust" title="hotdust"></a></li>
                              <li class="user_name"><a href="http://blog.csdn.net/hotdust">hotdust</a></li>
                              <li class="time">2017年06月12日 10:14</li>
                              <li class="visited_num"><i class="icon iconfont icon-read"></i><span>431</span></li>
                          </ul>
                      </dd>
                  </dl>
                                                                        <!-- 广告位：PC端-博客详情通栏7（feed流）-808*120 -->
                  <script>
                      (function() {
                          var s = "_" + Math.random().toString(36).slice(2);
                          document.write('<div id="' + s + '"></div>');
                          (window.slotbydup=window.slotbydup || []).push({
                              id: '4983339',
                              container: s,
                              size: '808,120',
                              display: 'inlay-fix'
                          });
                      })();
                  </script>
                                                                              <dl class="clearfix csdn-tracking-statistics" data-mod="popu_387" data-poputype="feed"  data-feed-show="false"  data-dsm="post">
                      <dd>
                          <h2><a href="http://blog.csdn.net/u014774781/article/details/48580295"  target="_blank" strategy="BlogCommendFromBaidu_5">AVL树，红黑树，B树，B+树，Trie树应用场景简介</a></h2>
                          <div class="summary">
                              AVL树，红黑树，B树，B+树，Trie树应用场景简介




        AVL树：平衡二叉树，一般是用平衡因子差值决定并通过旋转来实现，左右子树树高差不超过1，那么和红黑树比较它是严...                          </div>
                          <ul>
                              <li class="avatar_img"><a href="http://blog.csdn.net/u014774781" target="_blank" strategy="BlogCommendFromBaidu_5"><img src="http://avatar.csdn.net/B/7/1/3_u014774781.jpg" alt="u014774781" title="u014774781"></a></li>
                              <li class="user_name"><a href="http://blog.csdn.net/u014774781">u014774781</a></li>
                              <li class="time">2015年09月19日 21:14</li>
                              <li class="visited_num"><i class="icon iconfont icon-read"></i><span>2034</span></li>
                          </ul>
                      </dd>
                  </dl>
                                                                                                    <dl class="clearfix csdn-tracking-statistics" data-mod="popu_387" data-poputype="feed"  data-feed-show="false"  data-dsm="post">
                      <dd>
                          <h2><a href="http://blog.csdn.net/hijiankang/article/details/9166451"  target="_blank" strategy="BlogCommendFromBaidu_6">B+树B-树的应用</a></h2>
                          <div class="summary">
                              B-树



1 .B-树定义

B-树是一种平衡的多路查找树，它在文件系统中很有用。

定义：一棵m 阶的B-树，或者为空树，或为满足下列特性的m 叉树：
⑴树中每个结点至多有m ...                          </div>
                          <ul>
                              <li class="avatar_img"><a href="http://blog.csdn.net/hijiankang" target="_blank" strategy="BlogCommendFromBaidu_6"><img src="http://avatar.csdn.net/E/0/2/3_hijiankang.jpg" alt="hijiankang" title="hijiankang"></a></li>
                              <li class="user_name"><a href="http://blog.csdn.net/hijiankang">hijiankang</a></li>
                              <li class="time">2013年06月25日 00:30</li>
                              <li class="visited_num"><i class="icon iconfont icon-read"></i><span>4730</span></li>
                          </ul>
                      </dd>
                  </dl>
                                                                                                    <dl class="clearfix csdn-tracking-statistics downloadElement" data-mod="popu_387" data-poputype="feed"  data-feed-show="false"  data-dsm="post">
                      <dt><a href="http://download.csdn.net/detail/chenxh/3" target="_blank" strategy="BlogCommendFromBaidu_7"><img class="maxwidth" src="http://download.csdn.net/images/minetype/zip.svg" alt="" title=""></a></dt>
                      <dd>
                          <div class="summary">
                              <h2><a href="http://download.csdn.net/detail/chenxh/3" target="_blank" strategy="BlogCommendFromBaidu_7">Delphi7高级应用开发随书源码</a></h2>
                              <div class="summary">
                                  <ul>
                                      <li class="time">2003年04月30日 00:00</li>
                                      <li class="visited_num fileSize">676KB</li>
                                      <li class="download_btn"><a href="http://download.csdn.net/detail/chenxh/3" target="_blank">下载</a></li>
                                  </ul>
                              </div>
                          </div>
                      </dd>
                  </dl>
                                                                                                    <dl class="clearfix csdn-tracking-statistics" data-mod="popu_387" data-poputype="feed"  data-feed-show="false"  data-dsm="post">
                      <dd>
                          <h2><a href="http://blog.csdn.net/chengonghao/article/details/52168929"  target="_blank" strategy="BlogCommendFromBaidu_8">AVL树，红黑树，B树，B+树，Trie树应用场景简介</a></h2>
                          <div class="summary">
                              转载自：点击打开链接

AVL树，红黑树，B树，B+树，Trie树应用场景简介

 
1.AVL树：
平衡二叉树，一般是用平衡因子差值决定并通过旋转来实现，左右子树树高差不超过1，那么和红...                          </div>
                          <ul>
                              <li class="avatar_img"><a href="http://blog.csdn.net/chengonghao" target="_blank" strategy="BlogCommendFromBaidu_8"><img src="http://avatar.csdn.net/7/1/C/3_chengonghao.jpg" alt="chengonghao" title="chengonghao"></a></li>
                              <li class="user_name"><a href="http://blog.csdn.net/chengonghao">chengonghao</a></li>
                              <li class="time">2016年08月10日 10:21</li>
                              <li class="visited_num"><i class="icon iconfont icon-read"></i><span>464</span></li>
                          </ul>
                      </dd>
                  </dl>
                                                                                                    <dl class="clearfix csdn-tracking-statistics" data-mod="popu_387" data-poputype="feed"  data-feed-show="false"  data-dsm="post">
                      <dd>
                          <h2><a href="http://blog.csdn.net/Zerohuan/article/details/50438883"  target="_blank" strategy="BlogCommendFromBaidu_9">数据结构的理解和应用——红黑树</a></h2>
                          <div class="summary">
                              心得：看了《数据结构和算法分析》，《算法导论》以及《算法》上关于红黑树的章节，总算把红黑树的实现和操作给理解了一边。虽然插入和删除的情况有些复杂，因为1,2年前看过一次，后来就忘了，感觉还是当时没有真...                          </div>
                          <ul>
                              <li class="avatar_img"><a href="http://blog.csdn.net/Zerohuan" target="_blank" strategy="BlogCommendFromBaidu_9"><img src="http://avatar.csdn.net/B/1/B/3_zerohuan.jpg" alt="Zerohuan" title="Zerohuan"></a></li>
                              <li class="user_name"><a href="http://blog.csdn.net/Zerohuan">Zerohuan</a></li>
                              <li class="time">2015年12月31日 00:18</li>
                              <li class="visited_num"><i class="icon iconfont icon-read"></i><span>1144</span></li>
                          </ul>
                      </dd>
                  </dl>
                                                    </div>
  </main>
<aside>
  <div class="right_box user_info">
      <dl class="inf_bar clearfix">
          <dt class="csdn-tracking-statistics" data-mod="popu_381">
              <a href="http://blog.csdn.net/benpaobagzb" target="_blank">
                  <img src="http://avatar.csdn.net/B/5/2/3_benpaobagzb.jpg" class="avatar_pic">
              </a>
              <span class="medals" title="">
                  </span>
          </dt>
          <dd>
              <h3 class="csdn-tracking-statistics"  data-mod="popu_380"><a href="http://blog.csdn.net/benpaobagzb" target="_blank" id="uid">benpaobagzb</a></h3>
              <span  class="csdn-tracking-statistics" data-mod="popu_379"><a class="btn btn-redborder-small "  id="span_add_follow" target="_self">＋关注</a></span>
          </dd>
      </dl>
      <div class="inf_number_box clearfix">
          <dl>
              <dt>原创</dt>
              <dd>638</dd>
          </dl>
          <dl>
              <dt>粉丝</dt>
              <dd id='fan'>94</dd>
          </dl>
          <dl>
              <dt>喜欢</dt>
              <dd>1</dd>
          </dl>
          <dl>
        <dt>码云</dt>
        <dd>&nbsp;</dd>
      </dl>

      </div>
  <div class="writings">
        <div class="public_signal clearfix">
          <h3>他的最新文章</h3>
          <a href="http://blog.csdn.net/benpaobagzb" target="_blank" class="more"><span>更多文章</span></a>
        </div>
          <ul class="inf_list clearfix csdn-tracking-statistics" data-mod="popu_382">
                            <li class="clearfix">
                  <a href="http://blog.csdn.net/benpaobagzb/article/details/51702733" target="_blank">使用gprof来对程序的性能分析总结</a>
              </li>
                            <li class="clearfix">
                  <a href="http://blog.csdn.net/benpaobagzb/article/details/51702695" target="_blank">服务器TIME_WAIT和CLOSE_WAIT详解和解决办法</a>
              </li>
                            <li class="clearfix">
                  <a href="http://blog.csdn.net/benpaobagzb/article/details/51702687" target="_blank">wait3,wait4 用法</a>
              </li>
                        </ul>
      </div>
  </div>
  <div class="extension_other csdn-tracking-statistics" data-mod="popu_389">
     <!--u3032528-->
    <div class="flashrecommend">
        <script type="text/javascript" src="http://mpb1.iteye.com/bwocoltlyzdec.js"></script>
    </div>
  </div>

<!--    [StartShowSelfColumn]-->
    <!--    [EndShowSelfColumn]-->
    <div class="fixRight">
        <div class="right_box padb0 csdn-tracking-statistics" data-mod="popu_391">
            <h3 class="tit"><span><em>在线课程</em></span></h3>
            <ul class="edu_li clearfix">
<!--            [starteducourses]-->
                                                            <li>
                            <div>
                                <a href="http://edu.csdn.net/huiyiCourse/detail/611?utm_source=blog7" target="_blank">
                                    <img src="http://img.bss.csdn.net/201711241011569449.jpg" alt="数据科学家，从入门到精进"
                                         title="数据科学家，从入门到精进">
                                </a>
                            </div>
                            <div>
                                <p><a href="http://edu.csdn.net/huiyiCourse/detail/611?utm_source=blog7"
                                      target="_blank">数据科学家，从入门到精进</a></p>
                                <p>讲师：李江龙</p>
                            </div>
                        </li>
                                            <li>
                            <div>
                                <a href="http://edu.csdn.net/huiyiCourse/series_detail/72?utm_source=blog7" target="_blank">
                                    <img src="http://img.bss.csdn.net/201711241006496339.png" alt="【明日开播】SDCC 2017之前端技术实战线上峰会"
                                         title="【明日开播】SDCC 2017之前端技术实战线上峰会">
                                </a>
                            </div>
                            <div>
                                <p><a href="http://edu.csdn.net/huiyiCourse/series_detail/72?utm_source=blog7"
                                      target="_blank">【明日开播】SDCC 2017之前端技术实战线上峰会</a></p>
                                <p>讲师：司徒正美</p>
                            </div>
                        </li>
                                    <!--            [endeducourses]-->
            </ul>
            </div>
        <div class="extension_other csdn-tracking-statistics bottomRcom" data-mod="popu_389" style="position:absolute;z-index:-5;opacity:0;pointer-events:none">
            <!--u3032528-->
            <div class="flashrecommend">
                <!-- 请置于所有广告位代码之前 -->
                <script src="http://dup.baidustatic.com/js/dm.js"></script>

                <!-- 广告位：PC端-博客详情页右侧视窗1（feed流）-300*250 -->
                <script>
                    (function() {
                        var s = "_" + Math.random().toString(36).slice(2);
                        document.write('<div id="' + s + '"></div>');
                        (window.slotbydup=window.slotbydup || []).push({
                            id: '4770930',
                            container: s,
                            size: '300,250',
                            display: 'inlay-fix'
                        });
                    })();
                </script>
            </div>
        </div>

    </div>
    <div class="user-hotArticle">
        <h3>热门文章</h3>
        <ul class="hotArticle-list csdn-tracking-statistics" data-mod="popu_521">
<!--            [StartHotArticles]-->
                                                <li>
                        <a href="http://blog.csdn.net/benpaobagzb/article/details/47979649">软件测试基础知识总结（一）</a>
                        <div class="read list-left"><i class="icon iconfont icon-read"></i><span>40507</span></div>
                    </li>
                                    <li>
                        <a href="http://blog.csdn.net/benpaobagzb/article/details/50719219">32位与64位编程注意事项总结</a>
                        <div class="read list-left"><i class="icon iconfont icon-read"></i><span>6558</span></div>
                    </li>
                                    <li>
                        <a href="http://blog.csdn.net/benpaobagzb/article/details/51364005">GCC 编译使用动态链接库和静态链接库--及先后顺序----及环境变量设置总结</a>
                        <div class="read list-left"><i class="icon iconfont icon-read"></i><span>6250</span></div>
                    </li>
                                    <li>
                        <a href="http://blog.csdn.net/benpaobagzb/article/details/51701937">基于Web开发模式的信息抽取</a>
                        <div class="read list-left"><i class="icon iconfont icon-read"></i><span>6160</span></div>
                    </li>
                                    <li>
                        <a href="http://blog.csdn.net/benpaobagzb/article/details/51044420">Linux技巧:多核下绑定网卡中断到不同CPU（core）总结</a>
                        <div class="read list-left"><i class="icon iconfont icon-read"></i><span>6012</span></div>
                    </li>
                            <!--            [EndHotArticles]-->
        </ul>
    </div>
<!--    [startcustom]-->
    <!--    [endcustom]-->
</aside></div>

<div class="left_fixed">
    <div class="left_show_button">
        <span>
          <i class="icon iconfont icon-youjiantou"></i>
        </span>
    </div>
    <ul class="left_menu">
        <li>
            <button class="left-fixed-btn btn-like csdn-tracking-statistics" data-mod="popu_373" target="_self">
                <a href="javascript:void(0);" class="iconbox border_red"><i class="icon iconfont icon-dianzan"></i></a>
                <a class="txt" href="javascript:void(0);">1</a>
            </button>
        </li>
        <li id="blog_artical_directory">
            <button class="left-fixed-btn left_menu_btn csdn-tracking-statistics" data-mod="popu_372" target="_self">
                <a href="javascript:void(0);" class="iconbox border_black"><i class="icon iconfont icon-mulu"></i></a>
            </button>
        </li>
        <li class="menu_con">
            <div class="list_father">
                <div class="arr_box">
                    <button class="btn-noborder arr-btn scroll-down  left_scroll_down"><i class="icon iconfont icon-xiajiantou"></i></button>
                    <button class="btn-noborder arr-btn scroll-up left_scroll_top"><i class="icon iconfont icon-shangjiantou"></i></button>
                </div>
                <div class="arr"></div>
                <div id="csdnBlogDir"></div>
            </div>
        </li>
        <!--        <li>-->
        <!--            <button class="left-fixed-btn btn-like tracking-ad" data-mod="popu_373" target="_self">-->
        <!--                <span class="iconbox border_red"><i class="icon iconfont icon-xihuan-"></i></span>-->
        <!--                <span class="txt">喜欢</span>-->
        <!--                <span class="untxt">取消喜欢</span>-->
        <!--            </button>-->
        <!--        </li>-->
        <li>
            <button class="left-fixed-btn csdn-tracking-statistics" data-mod="popu_374"  id="com-quick-collect" target="_self">
                <a href="javascript:void(0);" class="iconbox border_purple"><i class="icon iconfont icon-shoucang"></i></a>
            </button>
        </li>
        <li>
            <button class="left-fixed-btn btn-pinglun csdn-tracking-statistics" data-mod="popu_544" >
                <a href="javascript:void(0);" class="iconbox border_purple"><i class="icon iconfont icon-pinglun"></i></a>
            </button>
        </li>
        <li id="share_box">
            <button class="left-fixed-btn  csdn-tracking-statistics"  data-mod="popu_375" target="_self">
                <a href="javascript:void(0);" class="iconbox border_orange"><i class="icon iconfont icon-fenxiang"></i></a>
            </button>
            <div class="bdsharebuttonbox csdn-tracking-statistics" data-mod="popu_172">
                <div class="outside">
                    <span class="iconbox border_red2"><i class="icon iconfont icon-xinlang"></i></span>
                    <a href="#" class="bds_tsina" data-cmd="tsina" title="分享到新浪微博"> </a>
                </div>
                <div class="outside">
                    <span class="iconbox border_green"><i class="icon iconfont icon-weixin"></i></span>
                    <a href="#" class="bds_weixin" data-cmd="weixin" title="分享到微信"> </a>
                </div>
                <div class="outside">
                    <span class="iconbox border_blue"><i class="icon iconfont icon-QQ"></i></span>
                    <a href="#" class="bds_qzone" data-cmd="qzone" title="分享到QQ空间"> </a>
                </div>
            </div>
        </li>
    </ul>
</div>
<div class="right_fixed">
    <div class="r_ico">
        <i class="icon iconfont icon-jubao"></i>
        <span class="txt" id="reportBtn">内容举报</span>
    </div>
    <div class="returnTop">
        <i class="icon iconfont icon-fanhuidingbu"></i>
        <span>返回顶部</span>
    </div>
</div>
<div id="pop_win"></div>
<div id="popup_mask"></div>
<div class="pop_CA_cover" ></div>
<div class="pop pop_CA" >
    <div class="CA_header">
        收藏助手
        <span class="cancel_icon"  id="fapancle" ></span>
    </div>
    <iframe src="" id="collectIframe" frameborder="0" width="100%" height="360"  scrolling="no" ></iframe>
</div>
<!--举报-->
<div id="report_dialog" style="top: 250px; left: 343.5px;"><div id="panel_report">
    <div class="panel_head">不良信息举报</div>
    <form method="post" id="frmReport" class="panel_body">
        <table border="0" cellpadding="0" cellspacing="4" class="pop_table">
            <tbody><tr><td colspan="2">您举报文章：<a href="http://blog.csdn.net/benpaobagzb/article/details/50805711" target="_blank">红黑树和B树应用场景总结</a></td></tr>
            <tr>
                <th style="width:60px;">举报原因：</th>
                <td id="panel_reporttype">
                    <label><input type="radio" class="report_type" id="report_sex" name="report_type" value="1">色情</label>
                    <label><input type="radio" class="report_type" id="report_Politics" name="report_type" value="2">政治</label>
                    <label><input type="radio" class="report_type" id="report_copy" name="report_type" value="3">抄袭</label>
                    <label><input type="radio" class="report_type" id="report_ad" name="report_type" value="4">广告</label>
                    <label><input type="radio" class="report_type" id="report_want" name="report_type" value="5">招聘</label>
                    <label><input type="radio" class="report_type" id="report_call" name="report_type" value="6">骂人</label>
                    <br>
                    <label><input type="radio" class="report_type" id="report_other" name="report_type" value="7">其他</label>
                    <input type="text" name="report_other_content" id="report_other_content" maxlength="30" style="display: none;">
                </td>
            </tr>
            <tr id="panel_originalurl" style="display: none;">
                <th>原文地址：</th>
                <td>
                    <input id="originalurl" value="http://" name="originalurl" type="text" style="width: 90%;">
                </td>
            </tr>
            <tr>
                <th id="sp_reason">原因补充：</th>
                <td>
                    <textarea id="report_description" style="width: 300px;" rows="3" name="report_description"></textarea>
                    <p id="sp_n" style="color:#999;margin:0px;padding:0px;">(最多只允许输入30个字)</p>
                </td>
            </tr>
            <tr>
                <td></td>
                <td>
                    <input id="btnSubmitReport" name="submit" type="image" align="middle" class="btn_1" src="http://s.csdnimg.cn/static/images/btn_submit.jpg">
                    <span style="padding-left:20px;"></span>
                    <img id="btnCloseReportDialog" src="http://s.csdnimg.cn/static/images/btn_cancel.jpg" align="middle">
                    <div id="error" style="color: Red">
                    </div>
                </td>
            </tr>
            </tbody></table>
    </form>
</div>
    <script language="javascript" type="text/javascript">
        var isComment=0;
        //显示隐藏地址
        $(function () {
          console.log("version:phoenix");
            if(isComment){
                $("#report_description").attr("disabled",true);
                $("#sp_n").hide();
                $("#sp_reason").html("评论内容：");
            }
            $(".report_type").click(function () {
                $("#panel_originalurl,#report_other_content").hide();
                switch ($(this).val()) {
                    case '3':
                        $("#panel_originalurl").show();
                        $("#originalurl").focus();
                        break;
                    case '7':
                        if(isComment){
                            $("#report_other_content").show().focus();
                        }
                        break;
                }

            });

            $("#frmReport").submit(function () {
                if (!currentUserName) {

                    if (confirm("您的操作必须登录，是否登录？")) {
                        location.href = "http://passport.csdn.net/account/login?from=" + encodeURIComponent(location.href);
                        return false;
                    }
                    return false;
                }

                var reportType = $("input[name=report_type]:checked").val();
                if(!reportType){
                    alert("请选择举报原因！");
                    return false;
                }
                var otherInfo = "";
                switch (reportType) {
                    case '3':
                        otherInfo = $("#originalurl").val();
                        if (otherInfo == ""||otherInfo=="http://") {
                            alert("举报抄袭必须提供原创文章地址！");
                            $("#originalurl").focus();
                            return false;
                        } else if(!checkeURL(otherInfo)) {
                            alert("请输入正确的原创文章地址！");
                            $("#originalurl").focus();
                            return false;
                        }
                        break;
                    case '7':
                        otherInfo = $("#report_other_content").val();
                        if (isComment && !otherInfo) {
                            alert("请填写举报的具体原因！");
                            $("#report_other_content").focus();
                            return false;
                        }
                        if(!isComment){
                            if(!$("#report_description").val()){
                                alert("请填写举报的具体原因！");
                                $("#report_description").focus();
                                return false;
                            }
                        }
                        break;
                }
                if(!isComment){
                    if($("#report_description").val().length>30){
                        alert("举报原因最多只允许输入30个字！");
                        return false;
                    }
                }
	            nowTime = {
		            year: new Date().getFullYear(),
		            month: parseInt(new Date().getMonth())+1,
		            day: new Date().getDate(),
		            hours: parseInt(new Date().getHours())+1,
		            minutes: parseInt(new Date().getMinutes())+1,
		            seconds: parseInt(new Date().getSeconds())+1
	            };
	            var data = {
		            articleId: fileName,
		            commentId: 0,
		            reportType: reportType,
		            originalurl: $("#originalurl").val(),
		            report_other_content: $("#report_other_content").val(),
		            report_description: $("#report_description").val(),
		            currentUserName: currentUserName,
		            updatetime: nowTime.year+'/'+nowTime.month+'/'+nowTime.day+' '+ nowTime.hours+':'+nowTime.minutes+':'+seconds,
		            blogUser: username
	            };
	            if(!isComment){//如果是举报文章
		            data.report_other_content = data.report_description;
		            // data.report_description = "1. 神经网络这是一个常见的神经网络的图：这是一个常见的三层神经网络的基本构成，Layer L1是输入层，Layer L2是隐含层";
	            }

	            $.post(blog_address + "/common/report?id="+fileName+"&t=2", data, function (data) {
		            if (data.result == 1){
			            SetError("感谢您的举报，我们会尽快审核！");
		            }else{
			            if (data.content) alert(data.content);
		            }

	            });
                return false;
            });

            $("#btnCloseReportDialog").click(function () {
                CloseDiv();
            });

        });

        //提示后关闭方法
        function SetError(error) {
            $("#btnCloseReportDialog").trigger("click");
            alert(error);
            CloseDiv();
        }

        //关闭方法
        function CloseDiv() {

            $.removeMask();
            $("#report_dialog").hide();
            return false;
        }

        //验证url
        function checkeURL(url){
            return /^http(s)?:\/\/([\w-]+\.)+[\w-]+/i.test(url);
        }
    </script>
</div>
<!--  fixme 后期清理掉  -->
<div id="a52b5334d" style="width: 1px; height: 1px; display: none;">
    <script id="adJs52b5334"></script>
    <script>document.getElementById("adJs52b5334").src = "http://ads.csdn.net/js/opt/52b5334.js?t=" + Math.random();</script>
</div>
<script src="http://c.csdnimg.cn/public/common/libs/bootstrap/js/bootstrap.min.js" type="text/javascript"></script>
<script type="text/javascript" src="http://s.csdnimg.cn/static/bower-libs/MathJax/MathJax.js?config=TeX-AMS_HTML"></script>
<script type="text/javascript" src="http://passport.csdn.net/content/loginbox/login.js"></script>
<script type="text/javascript" src="http://s.csdnimg.cn/static/js/blog_ver.js?v=20171124144713"></script>
<script type="text/javascript" src="http://s.csdnimg.cn/static/js/skin2017.js?v=20171124144713"></script>
<script>window._bd_share_config = { "common": { "bdSnsKey": {}, "bdText": "", "bdMini": "1", "bdMiniList": false, "bdPic": "", "bdStyle": "0", "bdSize": "16" }, "share": {} }; with (document) 0[(getElementsByTagName('head')[0] || body).appendChild(createElement('script')).src = 'http://bdimg.share.baidu.com/static/api/js/share.js?v=89860593.js?cdnversion=' + ~(-new Date() / 36e5)];</script>
<script type="text/javascript" >
    if($(".article_collect li").length==1){$(".article_collect").hide();}
    if($(".article_tags li").length==1){$(".article_tags").hide();}
    $(".edit a").attr("href","http://write.blog.csdn.net/postedit/"+fileName);
    $.each($(".edu_li a"),function(){$(this).attr("href",$(this).attr("href").replace("blog7","blog9"))});
    new CNick('#uid').showNickname();

    if($("#fan").html()=="")
    {
	    $("#fan").html(0);
    }
</script>
<script src="http://c.csdnimg.cn/public/common/append_mark/appendMark.min.js?v=5.00.43" type="text/javascript"></script>
<script type="text/javascript">
    appendMark($('.recommend_list').children('a').find('dt'),$('.extension_other'))
</script>
</body>
